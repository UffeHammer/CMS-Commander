//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.1.
// 
#pragma warning disable 1591

namespace SitecoreConverter.Core.Sitecore43 {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.ComponentModel;
    using System.Xml.Serialization;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="Sitecore Client APISoap", Namespace="http://sitecore.net/client/api/")]
    public partial class SitecoreClientAPI : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback AboutOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddItemFromMasterOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddItemFromMasterExOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddItemFromTemplateOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddItemFromTemplateExOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddItemRevisionOperationCompleted;
        
        private System.Threading.SendOrPostCallback ApplyExtranetSecurityToChildrenOperationCompleted;
        
        private System.Threading.SendOrPostCallback ApplySecurityToChildrenOperationCompleted;
        
        private System.Threading.SendOrPostCallback ApplySimpleUpdateOperationCompleted;
        
        private System.Threading.SendOrPostCallback ApproveItemsOperationCompleted;
        
        private System.Threading.SendOrPostCallback BackupDatabaseOperationCompleted;
        
        private System.Threading.SendOrPostCallback BuildPackageOperationCompleted;
        
        private System.Threading.SendOrPostCallback CanLoginOperationCompleted;
        
        private System.Threading.SendOrPostCallback CanPublishIncrementallyOperationCompleted;
        
        private System.Threading.SendOrPostCallback CompactDatabaseOperationCompleted;
        
        private System.Threading.SendOrPostCallback CopyItemToOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateDocumentOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateMasterOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateTemplateOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteChildrenOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteDocumentOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteItemOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteItemVersionOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteItemVersionsOperationCompleted;
        
        private System.Threading.SendOrPostCallback DuplicateOperationCompleted;
        
        private System.Threading.SendOrPostCallback EmptyRecycleBinOperationCompleted;
        
        private System.Threading.SendOrPostCallback EndPreviewOperationCompleted;
        
        private System.Threading.SendOrPostCallback EndWebEditOperationCompleted;
        
        private System.Threading.SendOrPostCallback ExpandLinkedDatabasesOperationCompleted;
        
        private System.Threading.SendOrPostCallback FindItemOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetClientLanguageOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetControlHtmlOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDotMenuOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetHomeItemOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetLocalizedStringOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMediaInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetItemOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetItemFieldOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetItemFieldsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetItemTreeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetItemInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetItemsInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetItemMastersOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetItemPathOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetItemSecurityOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDefaultItemPathOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetItemTreeXmlOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetItemXmlOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMediaItemsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetNewItemXmlOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetParentIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetParentPathOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPublishingStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSiblingPathOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetThreadErrorsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMethodHtmlOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetXslFileHtmlOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetWebPageHtmlOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertItemTreeXmlOperationCompleted;
        
        private System.Threading.SendOrPostCallback IsLoggedInOperationCompleted;
        
        private System.Threading.SendOrPostCallback IsSessionValidOperationCompleted;
        
        private System.Threading.SendOrPostCallback IsPreviewingOperationCompleted;
        
        private System.Threading.SendOrPostCallback IsWebEditingOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadLayoutOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadPublishFileOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadXslFileOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoginOperationCompleted;
        
        private System.Threading.SendOrPostCallback LogoutOperationCompleted;
        
        private System.Threading.SendOrPostCallback MoveItemToOperationCompleted;
        
        private System.Threading.SendOrPostCallback NewLayoutOperationCompleted;
        
        private System.Threading.SendOrPostCallback PingOperationCompleted;
        
        private System.Threading.SendOrPostCallback PublishOperationCompleted;
        
        private System.Threading.SendOrPostCallback PublishItemOperationCompleted;
        
        private System.Threading.SendOrPostCallback ReloadDatabaseOperationCompleted;
        
        private System.Threading.SendOrPostCallback RenameItemOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveDatabaseOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveItemChangesOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveItemsOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveLayoutOperationCompleted;
        
        private System.Threading.SendOrPostCallback SavePackageOperationCompleted;
        
        private System.Threading.SendOrPostCallback SavePageEditDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveXslFileOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetClientLanguageOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetLanguageOperationCompleted;
        
        private System.Threading.SendOrPostCallback StartPreviewOperationCompleted;
        
        private System.Threading.SendOrPostCallback StartWebEditOperationCompleted;
        
        private System.Threading.SendOrPostCallback TidyHtmlOperationCompleted;
        
        private System.Threading.SendOrPostCallback TidyHtmlExOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateDocumentOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateSortorderOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPackageInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPackageXmlOperationCompleted;
        
        private System.Threading.SendOrPostCallback ImportPackageOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadPackageOperationCompleted;
        
        private System.Threading.SendOrPostCallback ResortChildrenOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public SitecoreClientAPI() {
            this.Url = global::SitecoreConverter.Core.Properties.Settings.Default.Core_Sitecore43_Sitecore_x0020_Client_x0020_API;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event AboutCompletedEventHandler AboutCompleted;
        
        /// <remarks/>
        public event AddItemFromMasterCompletedEventHandler AddItemFromMasterCompleted;
        
        /// <remarks/>
        public event AddItemFromMasterExCompletedEventHandler AddItemFromMasterExCompleted;
        
        /// <remarks/>
        public event AddItemFromTemplateCompletedEventHandler AddItemFromTemplateCompleted;
        
        /// <remarks/>
        public event AddItemFromTemplateExCompletedEventHandler AddItemFromTemplateExCompleted;
        
        /// <remarks/>
        public event AddItemRevisionCompletedEventHandler AddItemRevisionCompleted;
        
        /// <remarks/>
        public event ApplyExtranetSecurityToChildrenCompletedEventHandler ApplyExtranetSecurityToChildrenCompleted;
        
        /// <remarks/>
        public event ApplySecurityToChildrenCompletedEventHandler ApplySecurityToChildrenCompleted;
        
        /// <remarks/>
        public event ApplySimpleUpdateCompletedEventHandler ApplySimpleUpdateCompleted;
        
        /// <remarks/>
        public event ApproveItemsCompletedEventHandler ApproveItemsCompleted;
        
        /// <remarks/>
        public event BackupDatabaseCompletedEventHandler BackupDatabaseCompleted;
        
        /// <remarks/>
        public event BuildPackageCompletedEventHandler BuildPackageCompleted;
        
        /// <remarks/>
        public event CanLoginCompletedEventHandler CanLoginCompleted;
        
        /// <remarks/>
        public event CanPublishIncrementallyCompletedEventHandler CanPublishIncrementallyCompleted;
        
        /// <remarks/>
        public event CompactDatabaseCompletedEventHandler CompactDatabaseCompleted;
        
        /// <remarks/>
        public event CopyItemToCompletedEventHandler CopyItemToCompleted;
        
        /// <remarks/>
        public event CreateDocumentCompletedEventHandler CreateDocumentCompleted;
        
        /// <remarks/>
        public event CreateMasterCompletedEventHandler CreateMasterCompleted;
        
        /// <remarks/>
        public event CreateTemplateCompletedEventHandler CreateTemplateCompleted;
        
        /// <remarks/>
        public event DeleteChildrenCompletedEventHandler DeleteChildrenCompleted;
        
        /// <remarks/>
        public event DeleteDocumentCompletedEventHandler DeleteDocumentCompleted;
        
        /// <remarks/>
        public event DeleteItemCompletedEventHandler DeleteItemCompleted;
        
        /// <remarks/>
        public event DeleteItemVersionCompletedEventHandler DeleteItemVersionCompleted;
        
        /// <remarks/>
        public event DeleteItemVersionsCompletedEventHandler DeleteItemVersionsCompleted;
        
        /// <remarks/>
        public event DuplicateCompletedEventHandler DuplicateCompleted;
        
        /// <remarks/>
        public event EmptyRecycleBinCompletedEventHandler EmptyRecycleBinCompleted;
        
        /// <remarks/>
        public event EndPreviewCompletedEventHandler EndPreviewCompleted;
        
        /// <remarks/>
        public event EndWebEditCompletedEventHandler EndWebEditCompleted;
        
        /// <remarks/>
        public event ExpandLinkedDatabasesCompletedEventHandler ExpandLinkedDatabasesCompleted;
        
        /// <remarks/>
        public event FindItemCompletedEventHandler FindItemCompleted;
        
        /// <remarks/>
        public event GetClientLanguageCompletedEventHandler GetClientLanguageCompleted;
        
        /// <remarks/>
        public event GetControlHtmlCompletedEventHandler GetControlHtmlCompleted;
        
        /// <remarks/>
        public event GetDotMenuCompletedEventHandler GetDotMenuCompleted;
        
        /// <remarks/>
        public event GetHomeItemCompletedEventHandler GetHomeItemCompleted;
        
        /// <remarks/>
        public event GetLocalizedStringCompletedEventHandler GetLocalizedStringCompleted;
        
        /// <remarks/>
        public event GetMediaInfoCompletedEventHandler GetMediaInfoCompleted;
        
        /// <remarks/>
        public event GetItemCompletedEventHandler GetItemCompleted;
        
        /// <remarks/>
        public event GetItemFieldCompletedEventHandler GetItemFieldCompleted;
        
        /// <remarks/>
        public event GetItemFieldsCompletedEventHandler GetItemFieldsCompleted;
        
        /// <remarks/>
        public event GetItemTreeCompletedEventHandler GetItemTreeCompleted;
        
        /// <remarks/>
        public event GetItemInfoCompletedEventHandler GetItemInfoCompleted;
        
        /// <remarks/>
        public event GetItemsInfoCompletedEventHandler GetItemsInfoCompleted;
        
        /// <remarks/>
        public event GetItemMastersCompletedEventHandler GetItemMastersCompleted;
        
        /// <remarks/>
        public event GetItemPathCompletedEventHandler GetItemPathCompleted;
        
        /// <remarks/>
        public event GetItemSecurityCompletedEventHandler GetItemSecurityCompleted;
        
        /// <remarks/>
        public event GetDefaultItemPathCompletedEventHandler GetDefaultItemPathCompleted;
        
        /// <remarks/>
        public event GetItemTreeXmlCompletedEventHandler GetItemTreeXmlCompleted;
        
        /// <remarks/>
        public event GetItemXmlCompletedEventHandler GetItemXmlCompleted;
        
        /// <remarks/>
        public event GetMediaItemsCompletedEventHandler GetMediaItemsCompleted;
        
        /// <remarks/>
        public event GetNewItemXmlCompletedEventHandler GetNewItemXmlCompleted;
        
        /// <remarks/>
        public event GetParentIDCompletedEventHandler GetParentIDCompleted;
        
        /// <remarks/>
        public event GetParentPathCompletedEventHandler GetParentPathCompleted;
        
        /// <remarks/>
        public event GetPublishingStatusCompletedEventHandler GetPublishingStatusCompleted;
        
        /// <remarks/>
        public event GetSiblingPathCompletedEventHandler GetSiblingPathCompleted;
        
        /// <remarks/>
        public event GetThreadErrorsCompletedEventHandler GetThreadErrorsCompleted;
        
        /// <remarks/>
        public event GetMethodHtmlCompletedEventHandler GetMethodHtmlCompleted;
        
        /// <remarks/>
        public event GetXslFileHtmlCompletedEventHandler GetXslFileHtmlCompleted;
        
        /// <remarks/>
        public event GetWebPageHtmlCompletedEventHandler GetWebPageHtmlCompleted;
        
        /// <remarks/>
        public event InsertItemTreeXmlCompletedEventHandler InsertItemTreeXmlCompleted;
        
        /// <remarks/>
        public event IsLoggedInCompletedEventHandler IsLoggedInCompleted;
        
        /// <remarks/>
        public event IsSessionValidCompletedEventHandler IsSessionValidCompleted;
        
        /// <remarks/>
        public event IsPreviewingCompletedEventHandler IsPreviewingCompleted;
        
        /// <remarks/>
        public event IsWebEditingCompletedEventHandler IsWebEditingCompleted;
        
        /// <remarks/>
        public event LoadLayoutCompletedEventHandler LoadLayoutCompleted;
        
        /// <remarks/>
        public event LoadPublishFileCompletedEventHandler LoadPublishFileCompleted;
        
        /// <remarks/>
        public event LoadXslFileCompletedEventHandler LoadXslFileCompleted;
        
        /// <remarks/>
        public event LoginCompletedEventHandler LoginCompleted;
        
        /// <remarks/>
        public event LogoutCompletedEventHandler LogoutCompleted;
        
        /// <remarks/>
        public event MoveItemToCompletedEventHandler MoveItemToCompleted;
        
        /// <remarks/>
        public event NewLayoutCompletedEventHandler NewLayoutCompleted;
        
        /// <remarks/>
        public event PingCompletedEventHandler PingCompleted;
        
        /// <remarks/>
        public event PublishCompletedEventHandler PublishCompleted;
        
        /// <remarks/>
        public event PublishItemCompletedEventHandler PublishItemCompleted;
        
        /// <remarks/>
        public event ReloadDatabaseCompletedEventHandler ReloadDatabaseCompleted;
        
        /// <remarks/>
        public event RenameItemCompletedEventHandler RenameItemCompleted;
        
        /// <remarks/>
        public event SaveDatabaseCompletedEventHandler SaveDatabaseCompleted;
        
        /// <remarks/>
        public event SaveItemChangesCompletedEventHandler SaveItemChangesCompleted;
        
        /// <remarks/>
        public event SaveItemsCompletedEventHandler SaveItemsCompleted;
        
        /// <remarks/>
        public event SaveLayoutCompletedEventHandler SaveLayoutCompleted;
        
        /// <remarks/>
        public event SavePackageCompletedEventHandler SavePackageCompleted;
        
        /// <remarks/>
        public event SavePageEditDataCompletedEventHandler SavePageEditDataCompleted;
        
        /// <remarks/>
        public event SaveXslFileCompletedEventHandler SaveXslFileCompleted;
        
        /// <remarks/>
        public event SetClientLanguageCompletedEventHandler SetClientLanguageCompleted;
        
        /// <remarks/>
        public event SetLanguageCompletedEventHandler SetLanguageCompleted;
        
        /// <remarks/>
        public event StartPreviewCompletedEventHandler StartPreviewCompleted;
        
        /// <remarks/>
        public event StartWebEditCompletedEventHandler StartWebEditCompleted;
        
        /// <remarks/>
        public event TidyHtmlCompletedEventHandler TidyHtmlCompleted;
        
        /// <remarks/>
        public event TidyHtmlExCompletedEventHandler TidyHtmlExCompleted;
        
        /// <remarks/>
        public event UpdateDocumentCompletedEventHandler UpdateDocumentCompleted;
        
        /// <remarks/>
        public event UpdateSortorderCompletedEventHandler UpdateSortorderCompleted;
        
        /// <remarks/>
        public event GetPackageInfoCompletedEventHandler GetPackageInfoCompleted;
        
        /// <remarks/>
        public event GetPackageXmlCompletedEventHandler GetPackageXmlCompleted;
        
        /// <remarks/>
        public event ImportPackageCompletedEventHandler ImportPackageCompleted;
        
        /// <remarks/>
        public event LoadPackageCompletedEventHandler LoadPackageCompleted;
        
        /// <remarks/>
        public event ResortChildrenCompletedEventHandler ResortChildrenCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://sitecore.net/client/api/About", RequestNamespace="http://sitecore.net/client/api/", ResponseNamespace="http://sitecore.net/client/api/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string About() {
            object[] results = this.Invoke("About", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AboutAsync() {
            this.AboutAsync(null);
        }
        
        /// <remarks/>
        public void AboutAsync(object userState) {
            if ((this.AboutOperationCompleted == null)) {
                this.AboutOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAboutOperationCompleted);
            }
            this.InvokeAsync("About", new object[0], this.AboutOperationCompleted, userState);
        }
        
        private void OnAboutOperationCompleted(object arg) {
            if ((this.AboutCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AboutCompleted(this, new AboutCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://sitecore.net/client/api/AddItemFromMaster", RequestNamespace="http://sitecore.net/client/api/", ResponseNamespace="http://sitecore.net/client/api/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode AddItemFromMaster(string sName, string sParentItem, string sMaster) {
            object[] results = this.Invoke("AddItemFromMaster", new object[] {
                        sName,
                        sParentItem,
                        sMaster});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void AddItemFromMasterAsync(string sName, string sParentItem, string sMaster) {
            this.AddItemFromMasterAsync(sName, sParentItem, sMaster, null);
        }
        
        /// <remarks/>
        public void AddItemFromMasterAsync(string sName, string sParentItem, string sMaster, object userState) {
            if ((this.AddItemFromMasterOperationCompleted == null)) {
                this.AddItemFromMasterOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddItemFromMasterOperationCompleted);
            }
            this.InvokeAsync("AddItemFromMaster", new object[] {
                        sName,
                        sParentItem,
                        sMaster}, this.AddItemFromMasterOperationCompleted, userState);
        }
        
        private void OnAddItemFromMasterOperationCompleted(object arg) {
            if ((this.AddItemFromMasterCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddItemFromMasterCompleted(this, new AddItemFromMasterCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://sitecore.net/client/api/AddItemFromMasterEx", RequestNamespace="http://sitecore.net/client/api/", ResponseNamespace="http://sitecore.net/client/api/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode AddItemFromMasterEx(string sName, string sParentItem, string sMaster, bool register) {
            object[] results = this.Invoke("AddItemFromMasterEx", new object[] {
                        sName,
                        sParentItem,
                        sMaster,
                        register});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void AddItemFromMasterExAsync(string sName, string sParentItem, string sMaster, bool register) {
            this.AddItemFromMasterExAsync(sName, sParentItem, sMaster, register, null);
        }
        
        /// <remarks/>
        public void AddItemFromMasterExAsync(string sName, string sParentItem, string sMaster, bool register, object userState) {
            if ((this.AddItemFromMasterExOperationCompleted == null)) {
                this.AddItemFromMasterExOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddItemFromMasterExOperationCompleted);
            }
            this.InvokeAsync("AddItemFromMasterEx", new object[] {
                        sName,
                        sParentItem,
                        sMaster,
                        register}, this.AddItemFromMasterExOperationCompleted, userState);
        }
        
        private void OnAddItemFromMasterExOperationCompleted(object arg) {
            if ((this.AddItemFromMasterExCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddItemFromMasterExCompleted(this, new AddItemFromMasterExCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://sitecore.net/client/api/AddItemFromTemplate", RequestNamespace="http://sitecore.net/client/api/", ResponseNamespace="http://sitecore.net/client/api/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode AddItemFromTemplate(string sName, string sParentItem, string sTemplate) {
            object[] results = this.Invoke("AddItemFromTemplate", new object[] {
                        sName,
                        sParentItem,
                        sTemplate});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void AddItemFromTemplateAsync(string sName, string sParentItem, string sTemplate) {
            this.AddItemFromTemplateAsync(sName, sParentItem, sTemplate, null);
        }
        
        /// <remarks/>
        public void AddItemFromTemplateAsync(string sName, string sParentItem, string sTemplate, object userState) {
            if ((this.AddItemFromTemplateOperationCompleted == null)) {
                this.AddItemFromTemplateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddItemFromTemplateOperationCompleted);
            }
            this.InvokeAsync("AddItemFromTemplate", new object[] {
                        sName,
                        sParentItem,
                        sTemplate}, this.AddItemFromTemplateOperationCompleted, userState);
        }
        
        private void OnAddItemFromTemplateOperationCompleted(object arg) {
            if ((this.AddItemFromTemplateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddItemFromTemplateCompleted(this, new AddItemFromTemplateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://sitecore.net/client/api/AddItemFromTemplateEx", RequestNamespace="http://sitecore.net/client/api/", ResponseNamespace="http://sitecore.net/client/api/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode AddItemFromTemplateEx(string sName, string sParentItem, string sTemplate, bool register) {
            object[] results = this.Invoke("AddItemFromTemplateEx", new object[] {
                        sName,
                        sParentItem,
                        sTemplate,
                        register});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void AddItemFromTemplateExAsync(string sName, string sParentItem, string sTemplate, bool register) {
            this.AddItemFromTemplateExAsync(sName, sParentItem, sTemplate, register, null);
        }
        
        /// <remarks/>
        public void AddItemFromTemplateExAsync(string sName, string sParentItem, string sTemplate, bool register, object userState) {
            if ((this.AddItemFromTemplateExOperationCompleted == null)) {
                this.AddItemFromTemplateExOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddItemFromTemplateExOperationCompleted);
            }
            this.InvokeAsync("AddItemFromTemplateEx", new object[] {
                        sName,
                        sParentItem,
                        sTemplate,
                        register}, this.AddItemFromTemplateExOperationCompleted, userState);
        }
        
        private void OnAddItemFromTemplateExOperationCompleted(object arg) {
            if ((this.AddItemFromTemplateExCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddItemFromTemplateExCompleted(this, new AddItemFromTemplateExCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://sitecore.net/client/api/AddItemRevision", RequestNamespace="http://sitecore.net/client/api/", ResponseNamespace="http://sitecore.net/client/api/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string AddItemRevision(string sItemID, string sRevision) {
            object[] results = this.Invoke("AddItemRevision", new object[] {
                        sItemID,
                        sRevision});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddItemRevisionAsync(string sItemID, string sRevision) {
            this.AddItemRevisionAsync(sItemID, sRevision, null);
        }
        
        /// <remarks/>
        public void AddItemRevisionAsync(string sItemID, string sRevision, object userState) {
            if ((this.AddItemRevisionOperationCompleted == null)) {
                this.AddItemRevisionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddItemRevisionOperationCompleted);
            }
            this.InvokeAsync("AddItemRevision", new object[] {
                        sItemID,
                        sRevision}, this.AddItemRevisionOperationCompleted, userState);
        }
        
        private void OnAddItemRevisionOperationCompleted(object arg) {
            if ((this.AddItemRevisionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddItemRevisionCompleted(this, new AddItemRevisionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://sitecore.net/client/api/ApplyExtranetSecurityToChildren", RequestNamespace="http://sitecore.net/client/api/", ResponseNamespace="http://sitecore.net/client/api/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ApplyExtranetSecurityToChildren(string sItemID, string sSecurity, string sTemplate, string sMaster) {
            object[] results = this.Invoke("ApplyExtranetSecurityToChildren", new object[] {
                        sItemID,
                        sSecurity,
                        sTemplate,
                        sMaster});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ApplyExtranetSecurityToChildrenAsync(string sItemID, string sSecurity, string sTemplate, string sMaster) {
            this.ApplyExtranetSecurityToChildrenAsync(sItemID, sSecurity, sTemplate, sMaster, null);
        }
        
        /// <remarks/>
        public void ApplyExtranetSecurityToChildrenAsync(string sItemID, string sSecurity, string sTemplate, string sMaster, object userState) {
            if ((this.ApplyExtranetSecurityToChildrenOperationCompleted == null)) {
                this.ApplyExtranetSecurityToChildrenOperationCompleted = new System.Threading.SendOrPostCallback(this.OnApplyExtranetSecurityToChildrenOperationCompleted);
            }
            this.InvokeAsync("ApplyExtranetSecurityToChildren", new object[] {
                        sItemID,
                        sSecurity,
                        sTemplate,
                        sMaster}, this.ApplyExtranetSecurityToChildrenOperationCompleted, userState);
        }
        
        private void OnApplyExtranetSecurityToChildrenOperationCompleted(object arg) {
            if ((this.ApplyExtranetSecurityToChildrenCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ApplyExtranetSecurityToChildrenCompleted(this, new ApplyExtranetSecurityToChildrenCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://sitecore.net/client/api/ApplySecurityToChildren", RequestNamespace="http://sitecore.net/client/api/", ResponseNamespace="http://sitecore.net/client/api/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ApplySecurityToChildren(string sItemID, string sSecurity, string sTemplate, string sMaster) {
            object[] results = this.Invoke("ApplySecurityToChildren", new object[] {
                        sItemID,
                        sSecurity,
                        sTemplate,
                        sMaster});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ApplySecurityToChildrenAsync(string sItemID, string sSecurity, string sTemplate, string sMaster) {
            this.ApplySecurityToChildrenAsync(sItemID, sSecurity, sTemplate, sMaster, null);
        }
        
        /// <remarks/>
        public void ApplySecurityToChildrenAsync(string sItemID, string sSecurity, string sTemplate, string sMaster, object userState) {
            if ((this.ApplySecurityToChildrenOperationCompleted == null)) {
                this.ApplySecurityToChildrenOperationCompleted = new System.Threading.SendOrPostCallback(this.OnApplySecurityToChildrenOperationCompleted);
            }
            this.InvokeAsync("ApplySecurityToChildren", new object[] {
                        sItemID,
                        sSecurity,
                        sTemplate,
                        sMaster}, this.ApplySecurityToChildrenOperationCompleted, userState);
        }
        
        private void OnApplySecurityToChildrenOperationCompleted(object arg) {
            if ((this.ApplySecurityToChildrenCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ApplySecurityToChildrenCompleted(this, new ApplySecurityToChildrenCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://sitecore.net/client/api/ApplySimpleUpdate", RequestNamespace="http://sitecore.net/client/api/", ResponseNamespace="http://sitecore.net/client/api/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ApplySimpleUpdate(string sXml) {
            object[] results = this.Invoke("ApplySimpleUpdate", new object[] {
                        sXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ApplySimpleUpdateAsync(string sXml) {
            this.ApplySimpleUpdateAsync(sXml, null);
        }
        
        /// <remarks/>
        public void ApplySimpleUpdateAsync(string sXml, object userState) {
            if ((this.ApplySimpleUpdateOperationCompleted == null)) {
                this.ApplySimpleUpdateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnApplySimpleUpdateOperationCompleted);
            }
            this.InvokeAsync("ApplySimpleUpdate", new object[] {
                        sXml}, this.ApplySimpleUpdateOperationCompleted, userState);
        }
        
        private void OnApplySimpleUpdateOperationCompleted(object arg) {
            if ((this.ApplySimpleUpdateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ApplySimpleUpdateCompleted(this, new ApplySimpleUpdateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://sitecore.net/client/api/ApproveItems", RequestNamespace="http://sitecore.net/client/api/", ResponseNamespace="http://sitecore.net/client/api/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ApproveItems(string sXml) {
            object[] results = this.Invoke("ApproveItems", new object[] {
                        sXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ApproveItemsAsync(string sXml) {
            this.ApproveItemsAsync(sXml, null);
        }
        
        /// <remarks/>
        public void ApproveItemsAsync(string sXml, object userState) {
            if ((this.ApproveItemsOperationCompleted == null)) {
                this.ApproveItemsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnApproveItemsOperationCompleted);
            }
            this.InvokeAsync("ApproveItems", new object[] {
                        sXml}, this.ApproveItemsOperationCompleted, userState);
        }
        
        private void OnApproveItemsOperationCompleted(object arg) {
            if ((this.ApproveItemsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ApproveItemsCompleted(this, new ApproveItemsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://sitecore.net/client/api/BackupDatabase", RequestNamespace="http://sitecore.net/client/api/", ResponseNamespace="http://sitecore.net/client/api/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void BackupDatabase() {
            this.Invoke("BackupDatabase", new object[0]);
        }
        
        /// <remarks/>
        public void BackupDatabaseAsync() {
            this.BackupDatabaseAsync(null);
        }
        
        /// <remarks/>
        public void BackupDatabaseAsync(object userState) {
            if ((this.BackupDatabaseOperationCompleted == null)) {
                this.BackupDatabaseOperationCompleted = new System.Threading.SendOrPostCallback(this.OnBackupDatabaseOperationCompleted);
            }
            this.InvokeAsync("BackupDatabase", new object[0], this.BackupDatabaseOperationCompleted, userState);
        }
        
        private void OnBackupDatabaseOperationCompleted(object arg) {
            if ((this.BackupDatabaseCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.BackupDatabaseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://sitecore.net/client/api/BuildPackage", RequestNamespace="http://sitecore.net/client/api/", ResponseNamespace="http://sitecore.net/client/api/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode BuildPackage(string packageName) {
            object[] results = this.Invoke("BuildPackage", new object[] {
                        packageName});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void BuildPackageAsync(string packageName) {
            this.BuildPackageAsync(packageName, null);
        }
        
        /// <remarks/>
        public void BuildPackageAsync(string packageName, object userState) {
            if ((this.BuildPackageOperationCompleted == null)) {
                this.BuildPackageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnBuildPackageOperationCompleted);
            }
            this.InvokeAsync("BuildPackage", new object[] {
                        packageName}, this.BuildPackageOperationCompleted, userState);
        }
        
        private void OnBuildPackageOperationCompleted(object arg) {
            if ((this.BuildPackageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.BuildPackageCompleted(this, new BuildPackageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://sitecore.net/client/api/CanLogin", RequestNamespace="http://sitecore.net/client/api/", ResponseNamespace="http://sitecore.net/client/api/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool CanLogin() {
            object[] results = this.Invoke("CanLogin", new object[0]);
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void CanLoginAsync() {
            this.CanLoginAsync(null);
        }
        
        /// <remarks/>
        public void CanLoginAsync(object userState) {
            if ((this.CanLoginOperationCompleted == null)) {
                this.CanLoginOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCanLoginOperationCompleted);
            }
            this.InvokeAsync("CanLogin", new object[0], this.CanLoginOperationCompleted, userState);
        }
        
        private void OnCanLoginOperationCompleted(object arg) {
            if ((this.CanLoginCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CanLoginCompleted(this, new CanLoginCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://sitecore.net/client/api/CanPublishIncrementally", RequestNamespace="http://sitecore.net/client/api/", ResponseNamespace="http://sitecore.net/client/api/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool CanPublishIncrementally() {
            object[] results = this.Invoke("CanPublishIncrementally", new object[0]);
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void CanPublishIncrementallyAsync() {
            this.CanPublishIncrementallyAsync(null);
        }
        
        /// <remarks/>
        public void CanPublishIncrementallyAsync(object userState) {
            if ((this.CanPublishIncrementallyOperationCompleted == null)) {
                this.CanPublishIncrementallyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCanPublishIncrementallyOperationCompleted);
            }
            this.InvokeAsync("CanPublishIncrementally", new object[0], this.CanPublishIncrementallyOperationCompleted, userState);
        }
        
        private void OnCanPublishIncrementallyOperationCompleted(object arg) {
            if ((this.CanPublishIncrementallyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CanPublishIncrementallyCompleted(this, new CanPublishIncrementallyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://sitecore.net/client/api/CompactDatabase", RequestNamespace="http://sitecore.net/client/api/", ResponseNamespace="http://sitecore.net/client/api/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string CompactDatabase() {
            object[] results = this.Invoke("CompactDatabase", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CompactDatabaseAsync() {
            this.CompactDatabaseAsync(null);
        }
        
        /// <remarks/>
        public void CompactDatabaseAsync(object userState) {
            if ((this.CompactDatabaseOperationCompleted == null)) {
                this.CompactDatabaseOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCompactDatabaseOperationCompleted);
            }
            this.InvokeAsync("CompactDatabase", new object[0], this.CompactDatabaseOperationCompleted, userState);
        }
        
        private void OnCompactDatabaseOperationCompleted(object arg) {
            if ((this.CompactDatabaseCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CompactDatabaseCompleted(this, new CompactDatabaseCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://sitecore.net/client/api/CopyItemTo", RequestNamespace="http://sitecore.net/client/api/", ResponseNamespace="http://sitecore.net/client/api/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string CopyItemTo(string sItemID, string sDestinationID) {
            object[] results = this.Invoke("CopyItemTo", new object[] {
                        sItemID,
                        sDestinationID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CopyItemToAsync(string sItemID, string sDestinationID) {
            this.CopyItemToAsync(sItemID, sDestinationID, null);
        }
        
        /// <remarks/>
        public void CopyItemToAsync(string sItemID, string sDestinationID, object userState) {
            if ((this.CopyItemToOperationCompleted == null)) {
                this.CopyItemToOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCopyItemToOperationCompleted);
            }
            this.InvokeAsync("CopyItemTo", new object[] {
                        sItemID,
                        sDestinationID}, this.CopyItemToOperationCompleted, userState);
        }
        
        private void OnCopyItemToOperationCompleted(object arg) {
            if ((this.CopyItemToCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CopyItemToCompleted(this, new CopyItemToCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://sitecore.net/client/api/CreateDocument", RequestNamespace="http://sitecore.net/client/api/", ResponseNamespace="http://sitecore.net/client/api/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string CreateDocument(string sParent, string sMaster, string sXml) {
            object[] results = this.Invoke("CreateDocument", new object[] {
                        sParent,
                        sMaster,
                        sXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CreateDocumentAsync(string sParent, string sMaster, string sXml) {
            this.CreateDocumentAsync(sParent, sMaster, sXml, null);
        }
        
        /// <remarks/>
        public void CreateDocumentAsync(string sParent, string sMaster, string sXml, object userState) {
            if ((this.CreateDocumentOperationCompleted == null)) {
                this.CreateDocumentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateDocumentOperationCompleted);
            }
            this.InvokeAsync("CreateDocument", new object[] {
                        sParent,
                        sMaster,
                        sXml}, this.CreateDocumentOperationCompleted, userState);
        }
        
        private void OnCreateDocumentOperationCompleted(object arg) {
            if ((this.CreateDocumentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateDocumentCompleted(this, new CreateDocumentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://sitecore.net/client/api/CreateMaster", RequestNamespace="http://sitecore.net/client/api/", ResponseNamespace="http://sitecore.net/client/api/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode CreateMaster(string sName, string sTemplate) {
            object[] results = this.Invoke("CreateMaster", new object[] {
                        sName,
                        sTemplate});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void CreateMasterAsync(string sName, string sTemplate) {
            this.CreateMasterAsync(sName, sTemplate, null);
        }
        
        /// <remarks/>
        public void CreateMasterAsync(string sName, string sTemplate, object userState) {
            if ((this.CreateMasterOperationCompleted == null)) {
                this.CreateMasterOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateMasterOperationCompleted);
            }
            this.InvokeAsync("CreateMaster", new object[] {
                        sName,
                        sTemplate}, this.CreateMasterOperationCompleted, userState);
        }
        
        private void OnCreateMasterOperationCompleted(object arg) {
            if ((this.CreateMasterCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateMasterCompleted(this, new CreateMasterCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://sitecore.net/client/api/CreateTemplate", RequestNamespace="http://sitecore.net/client/api/", ResponseNamespace="http://sitecore.net/client/api/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode CreateTemplate(string sName) {
            object[] results = this.Invoke("CreateTemplate", new object[] {
                        sName});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void CreateTemplateAsync(string sName) {
            this.CreateTemplateAsync(sName, null);
        }
        
        /// <remarks/>
        public void CreateTemplateAsync(string sName, object userState) {
            if ((this.CreateTemplateOperationCompleted == null)) {
                this.CreateTemplateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateTemplateOperationCompleted);
            }
            this.InvokeAsync("CreateTemplate", new object[] {
                        sName}, this.CreateTemplateOperationCompleted, userState);
        }
        
        private void OnCreateTemplateOperationCompleted(object arg) {
            if ((this.CreateTemplateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateTemplateCompleted(this, new CreateTemplateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://sitecore.net/client/api/DeleteChildren", RequestNamespace="http://sitecore.net/client/api/", ResponseNamespace="http://sitecore.net/client/api/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int DeleteChildren(string path) {
            object[] results = this.Invoke("DeleteChildren", new object[] {
                        path});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteChildrenAsync(string path) {
            this.DeleteChildrenAsync(path, null);
        }
        
        /// <remarks/>
        public void DeleteChildrenAsync(string path, object userState) {
            if ((this.DeleteChildrenOperationCompleted == null)) {
                this.DeleteChildrenOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteChildrenOperationCompleted);
            }
            this.InvokeAsync("DeleteChildren", new object[] {
                        path}, this.DeleteChildrenOperationCompleted, userState);
        }
        
        private void OnDeleteChildrenOperationCompleted(object arg) {
            if ((this.DeleteChildrenCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteChildrenCompleted(this, new DeleteChildrenCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://sitecore.net/client/api/DeleteDocument", RequestNamespace="http://sitecore.net/client/api/", ResponseNamespace="http://sitecore.net/client/api/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeleteDocument(string sPath) {
            this.Invoke("DeleteDocument", new object[] {
                        sPath});
        }
        
        /// <remarks/>
        public void DeleteDocumentAsync(string sPath) {
            this.DeleteDocumentAsync(sPath, null);
        }
        
        /// <remarks/>
        public void DeleteDocumentAsync(string sPath, object userState) {
            if ((this.DeleteDocumentOperationCompleted == null)) {
                this.DeleteDocumentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteDocumentOperationCompleted);
            }
            this.InvokeAsync("DeleteDocument", new object[] {
                        sPath}, this.DeleteDocumentOperationCompleted, userState);
        }
        
        private void OnDeleteDocumentOperationCompleted(object arg) {
            if ((this.DeleteDocumentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteDocumentCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://sitecore.net/client/api/DeleteItem", RequestNamespace="http://sitecore.net/client/api/", ResponseNamespace="http://sitecore.net/client/api/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeleteItem(string sItemList) {
            this.Invoke("DeleteItem", new object[] {
                        sItemList});
        }
        
        /// <remarks/>
        public void DeleteItemAsync(string sItemList) {
            this.DeleteItemAsync(sItemList, null);
        }
        
        /// <remarks/>
        public void DeleteItemAsync(string sItemList, object userState) {
            if ((this.DeleteItemOperationCompleted == null)) {
                this.DeleteItemOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteItemOperationCompleted);
            }
            this.InvokeAsync("DeleteItem", new object[] {
                        sItemList}, this.DeleteItemOperationCompleted, userState);
        }
        
        private void OnDeleteItemOperationCompleted(object arg) {
            if ((this.DeleteItemCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteItemCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://sitecore.net/client/api/DeleteItemVersion", RequestNamespace="http://sitecore.net/client/api/", ResponseNamespace="http://sitecore.net/client/api/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeleteItemVersion(string sItemID, string sVersion) {
            this.Invoke("DeleteItemVersion", new object[] {
                        sItemID,
                        sVersion});
        }
        
        /// <remarks/>
        public void DeleteItemVersionAsync(string sItemID, string sVersion) {
            this.DeleteItemVersionAsync(sItemID, sVersion, null);
        }
        
        /// <remarks/>
        public void DeleteItemVersionAsync(string sItemID, string sVersion, object userState) {
            if ((this.DeleteItemVersionOperationCompleted == null)) {
                this.DeleteItemVersionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteItemVersionOperationCompleted);
            }
            this.InvokeAsync("DeleteItemVersion", new object[] {
                        sItemID,
                        sVersion}, this.DeleteItemVersionOperationCompleted, userState);
        }
        
        private void OnDeleteItemVersionOperationCompleted(object arg) {
            if ((this.DeleteItemVersionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteItemVersionCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://sitecore.net/client/api/DeleteItemVersions", RequestNamespace="http://sitecore.net/client/api/", ResponseNamespace="http://sitecore.net/client/api/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeleteItemVersions(string sItemID, string sVersions) {
            this.Invoke("DeleteItemVersions", new object[] {
                        sItemID,
                        sVersions});
        }
        
        /// <remarks/>
        public void DeleteItemVersionsAsync(string sItemID, string sVersions) {
            this.DeleteItemVersionsAsync(sItemID, sVersions, null);
        }
        
        /// <remarks/>
        public void DeleteItemVersionsAsync(string sItemID, string sVersions, object userState) {
            if ((this.DeleteItemVersionsOperationCompleted == null)) {
                this.DeleteItemVersionsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteItemVersionsOperationCompleted);
            }
            this.InvokeAsync("DeleteItemVersions", new object[] {
                        sItemID,
                        sVersions}, this.DeleteItemVersionsOperationCompleted, userState);
        }
        
        private void OnDeleteItemVersionsOperationCompleted(object arg) {
            if ((this.DeleteItemVersionsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteItemVersionsCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://sitecore.net/client/api/Duplicate", RequestNamespace="http://sitecore.net/client/api/", ResponseNamespace="http://sitecore.net/client/api/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode Duplicate(string sItemID, string sName) {
            object[] results = this.Invoke("Duplicate", new object[] {
                        sItemID,
                        sName});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void DuplicateAsync(string sItemID, string sName) {
            this.DuplicateAsync(sItemID, sName, null);
        }
        
        /// <remarks/>
        public void DuplicateAsync(string sItemID, string sName, object userState) {
            if ((this.DuplicateOperationCompleted == null)) {
                this.DuplicateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDuplicateOperationCompleted);
            }
            this.InvokeAsync("Duplicate", new object[] {
                        sItemID,
                        sName}, this.DuplicateOperationCompleted, userState);
        }
        
        private void OnDuplicateOperationCompleted(object arg) {
            if ((this.DuplicateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DuplicateCompleted(this, new DuplicateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://sitecore.net/client/api/EmptyRecycleBin", RequestNamespace="http://sitecore.net/client/api/", ResponseNamespace="http://sitecore.net/client/api/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string EmptyRecycleBin() {
            object[] results = this.Invoke("EmptyRecycleBin", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void EmptyRecycleBinAsync() {
            this.EmptyRecycleBinAsync(null);
        }
        
        /// <remarks/>
        public void EmptyRecycleBinAsync(object userState) {
            if ((this.EmptyRecycleBinOperationCompleted == null)) {
                this.EmptyRecycleBinOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEmptyRecycleBinOperationCompleted);
            }
            this.InvokeAsync("EmptyRecycleBin", new object[0], this.EmptyRecycleBinOperationCompleted, userState);
        }
        
        private void OnEmptyRecycleBinOperationCompleted(object arg) {
            if ((this.EmptyRecycleBinCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EmptyRecycleBinCompleted(this, new EmptyRecycleBinCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://sitecore.net/client/api/EndPreview", RequestNamespace="http://sitecore.net/client/api/", ResponseNamespace="http://sitecore.net/client/api/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void EndPreview() {
            this.Invoke("EndPreview", new object[0]);
        }
        
        /// <remarks/>
        public void EndPreviewAsync() {
            this.EndPreviewAsync(null);
        }
        
        /// <remarks/>
        public void EndPreviewAsync(object userState) {
            if ((this.EndPreviewOperationCompleted == null)) {
                this.EndPreviewOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEndPreviewOperationCompleted);
            }
            this.InvokeAsync("EndPreview", new object[0], this.EndPreviewOperationCompleted, userState);
        }
        
        private void OnEndPreviewOperationCompleted(object arg) {
            if ((this.EndPreviewCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EndPreviewCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://sitecore.net/client/api/EndWebEdit", RequestNamespace="http://sitecore.net/client/api/", ResponseNamespace="http://sitecore.net/client/api/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void EndWebEdit() {
            this.Invoke("EndWebEdit", new object[0]);
        }
        
        /// <remarks/>
        public void EndWebEditAsync() {
            this.EndWebEditAsync(null);
        }
        
        /// <remarks/>
        public void EndWebEditAsync(object userState) {
            if ((this.EndWebEditOperationCompleted == null)) {
                this.EndWebEditOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEndWebEditOperationCompleted);
            }
            this.InvokeAsync("EndWebEdit", new object[0], this.EndWebEditOperationCompleted, userState);
        }
        
        private void OnEndWebEditOperationCompleted(object arg) {
            if ((this.EndWebEditCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EndWebEditCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://sitecore.net/client/api/ExpandLinkedDatabases", RequestNamespace="http://sitecore.net/client/api/", ResponseNamespace="http://sitecore.net/client/api/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void ExpandLinkedDatabases(string expanded) {
            this.Invoke("ExpandLinkedDatabases", new object[] {
                        expanded});
        }
        
        /// <remarks/>
        public void ExpandLinkedDatabasesAsync(string expanded) {
            this.ExpandLinkedDatabasesAsync(expanded, null);
        }
        
        /// <remarks/>
        public void ExpandLinkedDatabasesAsync(string expanded, object userState) {
            if ((this.ExpandLinkedDatabasesOperationCompleted == null)) {
                this.ExpandLinkedDatabasesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExpandLinkedDatabasesOperationCompleted);
            }
            this.InvokeAsync("ExpandLinkedDatabases", new object[] {
                        expanded}, this.ExpandLinkedDatabasesOperationCompleted, userState);
        }
        
        private void OnExpandLinkedDatabasesOperationCompleted(object arg) {
            if ((this.ExpandLinkedDatabasesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ExpandLinkedDatabasesCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://sitecore.net/client/api/FindItem", RequestNamespace="http://sitecore.net/client/api/", ResponseNamespace="http://sitecore.net/client/api/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode FindItem(string name, string path, bool recurse, string previousFound) {
            object[] results = this.Invoke("FindItem", new object[] {
                        name,
                        path,
                        recurse,
                        previousFound});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void FindItemAsync(string name, string path, bool recurse, string previousFound) {
            this.FindItemAsync(name, path, recurse, previousFound, null);
        }
        
        /// <remarks/>
        public void FindItemAsync(string name, string path, bool recurse, string previousFound, object userState) {
            if ((this.FindItemOperationCompleted == null)) {
                this.FindItemOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFindItemOperationCompleted);
            }
            this.InvokeAsync("FindItem", new object[] {
                        name,
                        path,
                        recurse,
                        previousFound}, this.FindItemOperationCompleted, userState);
        }
        
        private void OnFindItemOperationCompleted(object arg) {
            if ((this.FindItemCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FindItemCompleted(this, new FindItemCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://sitecore.net/client/api/GetClientLanguage", RequestNamespace="http://sitecore.net/client/api/", ResponseNamespace="http://sitecore.net/client/api/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode GetClientLanguage() {
            object[] results = this.Invoke("GetClientLanguage", new object[0]);
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void GetClientLanguageAsync() {
            this.GetClientLanguageAsync(null);
        }
        
        /// <remarks/>
        public void GetClientLanguageAsync(object userState) {
            if ((this.GetClientLanguageOperationCompleted == null)) {
                this.GetClientLanguageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetClientLanguageOperationCompleted);
            }
            this.InvokeAsync("GetClientLanguage", new object[0], this.GetClientLanguageOperationCompleted, userState);
        }
        
        private void OnGetClientLanguageOperationCompleted(object arg) {
            if ((this.GetClientLanguageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetClientLanguageCompleted(this, new GetClientLanguageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://sitecore.net/client/api/GetControlHtml", RequestNamespace="http://sitecore.net/client/api/", ResponseNamespace="http://sitecore.net/client/api/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetControlHtml(string controlName, System.Xml.XmlNode properties, string assemblyName) {
            object[] results = this.Invoke("GetControlHtml", new object[] {
                        controlName,
                        properties,
                        assemblyName});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetControlHtmlAsync(string controlName, System.Xml.XmlNode properties, string assemblyName) {
            this.GetControlHtmlAsync(controlName, properties, assemblyName, null);
        }
        
        /// <remarks/>
        public void GetControlHtmlAsync(string controlName, System.Xml.XmlNode properties, string assemblyName, object userState) {
            if ((this.GetControlHtmlOperationCompleted == null)) {
                this.GetControlHtmlOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetControlHtmlOperationCompleted);
            }
            this.InvokeAsync("GetControlHtml", new object[] {
                        controlName,
                        properties,
                        assemblyName}, this.GetControlHtmlOperationCompleted, userState);
        }
        
        private void OnGetControlHtmlOperationCompleted(object arg) {
            if ((this.GetControlHtmlCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetControlHtmlCompleted(this, new GetControlHtmlCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://sitecore.net/client/api/GetDotMenu", RequestNamespace="http://sitecore.net/client/api/", ResponseNamespace="http://sitecore.net/client/api/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetDotMenu(string sItemID) {
            object[] results = this.Invoke("GetDotMenu", new object[] {
                        sItemID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetDotMenuAsync(string sItemID) {
            this.GetDotMenuAsync(sItemID, null);
        }
        
        /// <remarks/>
        public void GetDotMenuAsync(string sItemID, object userState) {
            if ((this.GetDotMenuOperationCompleted == null)) {
                this.GetDotMenuOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDotMenuOperationCompleted);
            }
            this.InvokeAsync("GetDotMenu", new object[] {
                        sItemID}, this.GetDotMenuOperationCompleted, userState);
        }
        
        private void OnGetDotMenuOperationCompleted(object arg) {
            if ((this.GetDotMenuCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDotMenuCompleted(this, new GetDotMenuCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://sitecore.net/client/api/GetHomeItem", RequestNamespace="http://sitecore.net/client/api/", ResponseNamespace="http://sitecore.net/client/api/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetHomeItem() {
            object[] results = this.Invoke("GetHomeItem", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetHomeItemAsync() {
            this.GetHomeItemAsync(null);
        }
        
        /// <remarks/>
        public void GetHomeItemAsync(object userState) {
            if ((this.GetHomeItemOperationCompleted == null)) {
                this.GetHomeItemOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetHomeItemOperationCompleted);
            }
            this.InvokeAsync("GetHomeItem", new object[0], this.GetHomeItemOperationCompleted, userState);
        }
        
        private void OnGetHomeItemOperationCompleted(object arg) {
            if ((this.GetHomeItemCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetHomeItemCompleted(this, new GetHomeItemCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://sitecore.net/client/api/GetLocalizedString", RequestNamespace="http://sitecore.net/client/api/", ResponseNamespace="http://sitecore.net/client/api/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetLocalizedString(string text) {
            object[] results = this.Invoke("GetLocalizedString", new object[] {
                        text});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetLocalizedStringAsync(string text) {
            this.GetLocalizedStringAsync(text, null);
        }
        
        /// <remarks/>
        public void GetLocalizedStringAsync(string text, object userState) {
            if ((this.GetLocalizedStringOperationCompleted == null)) {
                this.GetLocalizedStringOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetLocalizedStringOperationCompleted);
            }
            this.InvokeAsync("GetLocalizedString", new object[] {
                        text}, this.GetLocalizedStringOperationCompleted, userState);
        }
        
        private void OnGetLocalizedStringOperationCompleted(object arg) {
            if ((this.GetLocalizedStringCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetLocalizedStringCompleted(this, new GetLocalizedStringCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://sitecore.net/client/api/GetMediaInfo", RequestNamespace="http://sitecore.net/client/api/", ResponseNamespace="http://sitecore.net/client/api/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode GetMediaInfo(string sPath, string sRevision, string sLanguage) {
            object[] results = this.Invoke("GetMediaInfo", new object[] {
                        sPath,
                        sRevision,
                        sLanguage});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void GetMediaInfoAsync(string sPath, string sRevision, string sLanguage) {
            this.GetMediaInfoAsync(sPath, sRevision, sLanguage, null);
        }
        
        /// <remarks/>
        public void GetMediaInfoAsync(string sPath, string sRevision, string sLanguage, object userState) {
            if ((this.GetMediaInfoOperationCompleted == null)) {
                this.GetMediaInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMediaInfoOperationCompleted);
            }
            this.InvokeAsync("GetMediaInfo", new object[] {
                        sPath,
                        sRevision,
                        sLanguage}, this.GetMediaInfoOperationCompleted, userState);
        }
        
        private void OnGetMediaInfoOperationCompleted(object arg) {
            if ((this.GetMediaInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMediaInfoCompleted(this, new GetMediaInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://sitecore.net/client/api/GetItem", RequestNamespace="http://sitecore.net/client/api/", ResponseNamespace="http://sitecore.net/client/api/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode GetItem(string sPath) {
            object[] results = this.Invoke("GetItem", new object[] {
                        sPath});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void GetItemAsync(string sPath) {
            this.GetItemAsync(sPath, null);
        }
        
        /// <remarks/>
        public void GetItemAsync(string sPath, object userState) {
            if ((this.GetItemOperationCompleted == null)) {
                this.GetItemOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetItemOperationCompleted);
            }
            this.InvokeAsync("GetItem", new object[] {
                        sPath}, this.GetItemOperationCompleted, userState);
        }
        
        private void OnGetItemOperationCompleted(object arg) {
            if ((this.GetItemCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetItemCompleted(this, new GetItemCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://sitecore.net/client/api/GetItemField", RequestNamespace="http://sitecore.net/client/api/", ResponseNamespace="http://sitecore.net/client/api/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode GetItemField(string sItemPath, string sField) {
            object[] results = this.Invoke("GetItemField", new object[] {
                        sItemPath,
                        sField});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void GetItemFieldAsync(string sItemPath, string sField) {
            this.GetItemFieldAsync(sItemPath, sField, null);
        }
        
        /// <remarks/>
        public void GetItemFieldAsync(string sItemPath, string sField, object userState) {
            if ((this.GetItemFieldOperationCompleted == null)) {
                this.GetItemFieldOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetItemFieldOperationCompleted);
            }
            this.InvokeAsync("GetItemField", new object[] {
                        sItemPath,
                        sField}, this.GetItemFieldOperationCompleted, userState);
        }
        
        private void OnGetItemFieldOperationCompleted(object arg) {
            if ((this.GetItemFieldCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetItemFieldCompleted(this, new GetItemFieldCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://sitecore.net/client/api/GetItemFields", RequestNamespace="http://sitecore.net/client/api/", ResponseNamespace="http://sitecore.net/client/api/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode GetItemFields(string sItemPath, string[] vFields) {
            object[] results = this.Invoke("GetItemFields", new object[] {
                        sItemPath,
                        vFields});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void GetItemFieldsAsync(string sItemPath, string[] vFields) {
            this.GetItemFieldsAsync(sItemPath, vFields, null);
        }
        
        /// <remarks/>
        public void GetItemFieldsAsync(string sItemPath, string[] vFields, object userState) {
            if ((this.GetItemFieldsOperationCompleted == null)) {
                this.GetItemFieldsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetItemFieldsOperationCompleted);
            }
            this.InvokeAsync("GetItemFields", new object[] {
                        sItemPath,
                        vFields}, this.GetItemFieldsOperationCompleted, userState);
        }
        
        private void OnGetItemFieldsOperationCompleted(object arg) {
            if ((this.GetItemFieldsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetItemFieldsCompleted(this, new GetItemFieldsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://sitecore.net/client/api/GetItemTree", RequestNamespace="http://sitecore.net/client/api/", ResponseNamespace="http://sitecore.net/client/api/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode GetItemTree(string sItemPath, int nSublevels) {
            object[] results = this.Invoke("GetItemTree", new object[] {
                        sItemPath,
                        nSublevels});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void GetItemTreeAsync(string sItemPath, int nSublevels) {
            this.GetItemTreeAsync(sItemPath, nSublevels, null);
        }
        
        /// <remarks/>
        public void GetItemTreeAsync(string sItemPath, int nSublevels, object userState) {
            if ((this.GetItemTreeOperationCompleted == null)) {
                this.GetItemTreeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetItemTreeOperationCompleted);
            }
            this.InvokeAsync("GetItemTree", new object[] {
                        sItemPath,
                        nSublevels}, this.GetItemTreeOperationCompleted, userState);
        }
        
        private void OnGetItemTreeOperationCompleted(object arg) {
            if ((this.GetItemTreeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetItemTreeCompleted(this, new GetItemTreeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://sitecore.net/client/api/GetItemInfo", RequestNamespace="http://sitecore.net/client/api/", ResponseNamespace="http://sitecore.net/client/api/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode GetItemInfo(string sPath) {
            object[] results = this.Invoke("GetItemInfo", new object[] {
                        sPath});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void GetItemInfoAsync(string sPath) {
            this.GetItemInfoAsync(sPath, null);
        }
        
        /// <remarks/>
        public void GetItemInfoAsync(string sPath, object userState) {
            if ((this.GetItemInfoOperationCompleted == null)) {
                this.GetItemInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetItemInfoOperationCompleted);
            }
            this.InvokeAsync("GetItemInfo", new object[] {
                        sPath}, this.GetItemInfoOperationCompleted, userState);
        }
        
        private void OnGetItemInfoOperationCompleted(object arg) {
            if ((this.GetItemInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetItemInfoCompleted(this, new GetItemInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://sitecore.net/client/api/GetItemsInfo", RequestNamespace="http://sitecore.net/client/api/", ResponseNamespace="http://sitecore.net/client/api/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode GetItemsInfo(string sItems) {
            object[] results = this.Invoke("GetItemsInfo", new object[] {
                        sItems});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void GetItemsInfoAsync(string sItems) {
            this.GetItemsInfoAsync(sItems, null);
        }
        
        /// <remarks/>
        public void GetItemsInfoAsync(string sItems, object userState) {
            if ((this.GetItemsInfoOperationCompleted == null)) {
                this.GetItemsInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetItemsInfoOperationCompleted);
            }
            this.InvokeAsync("GetItemsInfo", new object[] {
                        sItems}, this.GetItemsInfoOperationCompleted, userState);
        }
        
        private void OnGetItemsInfoOperationCompleted(object arg) {
            if ((this.GetItemsInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetItemsInfoCompleted(this, new GetItemsInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://sitecore.net/client/api/GetItemMasters", RequestNamespace="http://sitecore.net/client/api/", ResponseNamespace="http://sitecore.net/client/api/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode GetItemMasters(string sItemID, string sRevision, string sLanguage) {
            object[] results = this.Invoke("GetItemMasters", new object[] {
                        sItemID,
                        sRevision,
                        sLanguage});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void GetItemMastersAsync(string sItemID, string sRevision, string sLanguage) {
            this.GetItemMastersAsync(sItemID, sRevision, sLanguage, null);
        }
        
        /// <remarks/>
        public void GetItemMastersAsync(string sItemID, string sRevision, string sLanguage, object userState) {
            if ((this.GetItemMastersOperationCompleted == null)) {
                this.GetItemMastersOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetItemMastersOperationCompleted);
            }
            this.InvokeAsync("GetItemMasters", new object[] {
                        sItemID,
                        sRevision,
                        sLanguage}, this.GetItemMastersOperationCompleted, userState);
        }
        
        private void OnGetItemMastersOperationCompleted(object arg) {
            if ((this.GetItemMastersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetItemMastersCompleted(this, new GetItemMastersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://sitecore.net/client/api/GetItemPath", RequestNamespace="http://sitecore.net/client/api/", ResponseNamespace="http://sitecore.net/client/api/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetItemPath(string sItemID, string sType) {
            object[] results = this.Invoke("GetItemPath", new object[] {
                        sItemID,
                        sType});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetItemPathAsync(string sItemID, string sType) {
            this.GetItemPathAsync(sItemID, sType, null);
        }
        
        /// <remarks/>
        public void GetItemPathAsync(string sItemID, string sType, object userState) {
            if ((this.GetItemPathOperationCompleted == null)) {
                this.GetItemPathOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetItemPathOperationCompleted);
            }
            this.InvokeAsync("GetItemPath", new object[] {
                        sItemID,
                        sType}, this.GetItemPathOperationCompleted, userState);
        }
        
        private void OnGetItemPathOperationCompleted(object arg) {
            if ((this.GetItemPathCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetItemPathCompleted(this, new GetItemPathCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://sitecore.net/client/api/GetItemSecurity", RequestNamespace="http://sitecore.net/client/api/", ResponseNamespace="http://sitecore.net/client/api/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetItemSecurity(string sItemID) {
            object[] results = this.Invoke("GetItemSecurity", new object[] {
                        sItemID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetItemSecurityAsync(string sItemID) {
            this.GetItemSecurityAsync(sItemID, null);
        }
        
        /// <remarks/>
        public void GetItemSecurityAsync(string sItemID, object userState) {
            if ((this.GetItemSecurityOperationCompleted == null)) {
                this.GetItemSecurityOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetItemSecurityOperationCompleted);
            }
            this.InvokeAsync("GetItemSecurity", new object[] {
                        sItemID}, this.GetItemSecurityOperationCompleted, userState);
        }
        
        private void OnGetItemSecurityOperationCompleted(object arg) {
            if ((this.GetItemSecurityCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetItemSecurityCompleted(this, new GetItemSecurityCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://sitecore.net/client/api/GetDefaultItemPath", RequestNamespace="http://sitecore.net/client/api/", ResponseNamespace="http://sitecore.net/client/api/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetDefaultItemPath() {
            object[] results = this.Invoke("GetDefaultItemPath", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetDefaultItemPathAsync() {
            this.GetDefaultItemPathAsync(null);
        }
        
        /// <remarks/>
        public void GetDefaultItemPathAsync(object userState) {
            if ((this.GetDefaultItemPathOperationCompleted == null)) {
                this.GetDefaultItemPathOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDefaultItemPathOperationCompleted);
            }
            this.InvokeAsync("GetDefaultItemPath", new object[0], this.GetDefaultItemPathOperationCompleted, userState);
        }
        
        private void OnGetDefaultItemPathOperationCompleted(object arg) {
            if ((this.GetDefaultItemPathCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDefaultItemPathCompleted(this, new GetDefaultItemPathCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://sitecore.net/client/api/GetItemTreeXml", RequestNamespace="http://sitecore.net/client/api/", ResponseNamespace="http://sitecore.net/client/api/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetItemTreeXml(string sPath, int nLevels) {
            object[] results = this.Invoke("GetItemTreeXml", new object[] {
                        sPath,
                        nLevels});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetItemTreeXmlAsync(string sPath, int nLevels) {
            this.GetItemTreeXmlAsync(sPath, nLevels, null);
        }
        
        /// <remarks/>
        public void GetItemTreeXmlAsync(string sPath, int nLevels, object userState) {
            if ((this.GetItemTreeXmlOperationCompleted == null)) {
                this.GetItemTreeXmlOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetItemTreeXmlOperationCompleted);
            }
            this.InvokeAsync("GetItemTreeXml", new object[] {
                        sPath,
                        nLevels}, this.GetItemTreeXmlOperationCompleted, userState);
        }
        
        private void OnGetItemTreeXmlOperationCompleted(object arg) {
            if ((this.GetItemTreeXmlCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetItemTreeXmlCompleted(this, new GetItemTreeXmlCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://sitecore.net/client/api/GetItemXml", RequestNamespace="http://sitecore.net/client/api/", ResponseNamespace="http://sitecore.net/client/api/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode GetItemXml(string sPath, string sRevision, string sLanguage) {
            object[] results = this.Invoke("GetItemXml", new object[] {
                        sPath,
                        sRevision,
                        sLanguage});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void GetItemXmlAsync(string sPath, string sRevision, string sLanguage) {
            this.GetItemXmlAsync(sPath, sRevision, sLanguage, null);
        }
        
        /// <remarks/>
        public void GetItemXmlAsync(string sPath, string sRevision, string sLanguage, object userState) {
            if ((this.GetItemXmlOperationCompleted == null)) {
                this.GetItemXmlOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetItemXmlOperationCompleted);
            }
            this.InvokeAsync("GetItemXml", new object[] {
                        sPath,
                        sRevision,
                        sLanguage}, this.GetItemXmlOperationCompleted, userState);
        }
        
        private void OnGetItemXmlOperationCompleted(object arg) {
            if ((this.GetItemXmlCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetItemXmlCompleted(this, new GetItemXmlCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://sitecore.net/client/api/GetMediaItems", RequestNamespace="http://sitecore.net/client/api/", ResponseNamespace="http://sitecore.net/client/api/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode GetMediaItems(string sPath, string sType) {
            object[] results = this.Invoke("GetMediaItems", new object[] {
                        sPath,
                        sType});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void GetMediaItemsAsync(string sPath, string sType) {
            this.GetMediaItemsAsync(sPath, sType, null);
        }
        
        /// <remarks/>
        public void GetMediaItemsAsync(string sPath, string sType, object userState) {
            if ((this.GetMediaItemsOperationCompleted == null)) {
                this.GetMediaItemsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMediaItemsOperationCompleted);
            }
            this.InvokeAsync("GetMediaItems", new object[] {
                        sPath,
                        sType}, this.GetMediaItemsOperationCompleted, userState);
        }
        
        private void OnGetMediaItemsOperationCompleted(object arg) {
            if ((this.GetMediaItemsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMediaItemsCompleted(this, new GetMediaItemsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://sitecore.net/client/api/GetNewItemXml", RequestNamespace="http://sitecore.net/client/api/", ResponseNamespace="http://sitecore.net/client/api/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetNewItemXml(string master, string name) {
            object[] results = this.Invoke("GetNewItemXml", new object[] {
                        master,
                        name});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetNewItemXmlAsync(string master, string name) {
            this.GetNewItemXmlAsync(master, name, null);
        }
        
        /// <remarks/>
        public void GetNewItemXmlAsync(string master, string name, object userState) {
            if ((this.GetNewItemXmlOperationCompleted == null)) {
                this.GetNewItemXmlOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetNewItemXmlOperationCompleted);
            }
            this.InvokeAsync("GetNewItemXml", new object[] {
                        master,
                        name}, this.GetNewItemXmlOperationCompleted, userState);
        }
        
        private void OnGetNewItemXmlOperationCompleted(object arg) {
            if ((this.GetNewItemXmlCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetNewItemXmlCompleted(this, new GetNewItemXmlCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://sitecore.net/client/api/GetParentID", RequestNamespace="http://sitecore.net/client/api/", ResponseNamespace="http://sitecore.net/client/api/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetParentID(string sItemID) {
            object[] results = this.Invoke("GetParentID", new object[] {
                        sItemID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetParentIDAsync(string sItemID) {
            this.GetParentIDAsync(sItemID, null);
        }
        
        /// <remarks/>
        public void GetParentIDAsync(string sItemID, object userState) {
            if ((this.GetParentIDOperationCompleted == null)) {
                this.GetParentIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetParentIDOperationCompleted);
            }
            this.InvokeAsync("GetParentID", new object[] {
                        sItemID}, this.GetParentIDOperationCompleted, userState);
        }
        
        private void OnGetParentIDOperationCompleted(object arg) {
            if ((this.GetParentIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetParentIDCompleted(this, new GetParentIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://sitecore.net/client/api/GetParentPath", RequestNamespace="http://sitecore.net/client/api/", ResponseNamespace="http://sitecore.net/client/api/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetParentPath(string path) {
            object[] results = this.Invoke("GetParentPath", new object[] {
                        path});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetParentPathAsync(string path) {
            this.GetParentPathAsync(path, null);
        }
        
        /// <remarks/>
        public void GetParentPathAsync(string path, object userState) {
            if ((this.GetParentPathOperationCompleted == null)) {
                this.GetParentPathOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetParentPathOperationCompleted);
            }
            this.InvokeAsync("GetParentPath", new object[] {
                        path}, this.GetParentPathOperationCompleted, userState);
        }
        
        private void OnGetParentPathOperationCompleted(object arg) {
            if ((this.GetParentPathCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetParentPathCompleted(this, new GetParentPathCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://sitecore.net/client/api/GetPublishingStatus", RequestNamespace="http://sitecore.net/client/api/", ResponseNamespace="http://sitecore.net/client/api/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetPublishingStatus(string handle) {
            object[] results = this.Invoke("GetPublishingStatus", new object[] {
                        handle});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetPublishingStatusAsync(string handle) {
            this.GetPublishingStatusAsync(handle, null);
        }
        
        /// <remarks/>
        public void GetPublishingStatusAsync(string handle, object userState) {
            if ((this.GetPublishingStatusOperationCompleted == null)) {
                this.GetPublishingStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPublishingStatusOperationCompleted);
            }
            this.InvokeAsync("GetPublishingStatus", new object[] {
                        handle}, this.GetPublishingStatusOperationCompleted, userState);
        }
        
        private void OnGetPublishingStatusOperationCompleted(object arg) {
            if ((this.GetPublishingStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPublishingStatusCompleted(this, new GetPublishingStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://sitecore.net/client/api/GetSiblingPath", RequestNamespace="http://sitecore.net/client/api/", ResponseNamespace="http://sitecore.net/client/api/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetSiblingPath(string path) {
            object[] results = this.Invoke("GetSiblingPath", new object[] {
                        path});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetSiblingPathAsync(string path) {
            this.GetSiblingPathAsync(path, null);
        }
        
        /// <remarks/>
        public void GetSiblingPathAsync(string path, object userState) {
            if ((this.GetSiblingPathOperationCompleted == null)) {
                this.GetSiblingPathOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSiblingPathOperationCompleted);
            }
            this.InvokeAsync("GetSiblingPath", new object[] {
                        path}, this.GetSiblingPathOperationCompleted, userState);
        }
        
        private void OnGetSiblingPathOperationCompleted(object arg) {
            if ((this.GetSiblingPathCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSiblingPathCompleted(this, new GetSiblingPathCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://sitecore.net/client/api/GetThreadErrors", RequestNamespace="http://sitecore.net/client/api/", ResponseNamespace="http://sitecore.net/client/api/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode GetThreadErrors(bool resetListAfterUse) {
            object[] results = this.Invoke("GetThreadErrors", new object[] {
                        resetListAfterUse});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void GetThreadErrorsAsync(bool resetListAfterUse) {
            this.GetThreadErrorsAsync(resetListAfterUse, null);
        }
        
        /// <remarks/>
        public void GetThreadErrorsAsync(bool resetListAfterUse, object userState) {
            if ((this.GetThreadErrorsOperationCompleted == null)) {
                this.GetThreadErrorsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetThreadErrorsOperationCompleted);
            }
            this.InvokeAsync("GetThreadErrors", new object[] {
                        resetListAfterUse}, this.GetThreadErrorsOperationCompleted, userState);
        }
        
        private void OnGetThreadErrorsOperationCompleted(object arg) {
            if ((this.GetThreadErrorsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetThreadErrorsCompleted(this, new GetThreadErrorsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://sitecore.net/client/api/GetMethodHtml", RequestNamespace="http://sitecore.net/client/api/", ResponseNamespace="http://sitecore.net/client/api/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetMethodHtml(string assemblyname, string classname, string methodname, string datasource, string parameters) {
            object[] results = this.Invoke("GetMethodHtml", new object[] {
                        assemblyname,
                        classname,
                        methodname,
                        datasource,
                        parameters});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetMethodHtmlAsync(string assemblyname, string classname, string methodname, string datasource, string parameters) {
            this.GetMethodHtmlAsync(assemblyname, classname, methodname, datasource, parameters, null);
        }
        
        /// <remarks/>
        public void GetMethodHtmlAsync(string assemblyname, string classname, string methodname, string datasource, string parameters, object userState) {
            if ((this.GetMethodHtmlOperationCompleted == null)) {
                this.GetMethodHtmlOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMethodHtmlOperationCompleted);
            }
            this.InvokeAsync("GetMethodHtml", new object[] {
                        assemblyname,
                        classname,
                        methodname,
                        datasource,
                        parameters}, this.GetMethodHtmlOperationCompleted, userState);
        }
        
        private void OnGetMethodHtmlOperationCompleted(object arg) {
            if ((this.GetMethodHtmlCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMethodHtmlCompleted(this, new GetMethodHtmlCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://sitecore.net/client/api/GetXslFileHtml", RequestNamespace="http://sitecore.net/client/api/", ResponseNamespace="http://sitecore.net/client/api/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetXslFileHtml(string path, string datasource, string parameters) {
            object[] results = this.Invoke("GetXslFileHtml", new object[] {
                        path,
                        datasource,
                        parameters});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetXslFileHtmlAsync(string path, string datasource, string parameters) {
            this.GetXslFileHtmlAsync(path, datasource, parameters, null);
        }
        
        /// <remarks/>
        public void GetXslFileHtmlAsync(string path, string datasource, string parameters, object userState) {
            if ((this.GetXslFileHtmlOperationCompleted == null)) {
                this.GetXslFileHtmlOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetXslFileHtmlOperationCompleted);
            }
            this.InvokeAsync("GetXslFileHtml", new object[] {
                        path,
                        datasource,
                        parameters}, this.GetXslFileHtmlOperationCompleted, userState);
        }
        
        private void OnGetXslFileHtmlOperationCompleted(object arg) {
            if ((this.GetXslFileHtmlCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetXslFileHtmlCompleted(this, new GetXslFileHtmlCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://sitecore.net/client/api/GetWebPageHtml", RequestNamespace="http://sitecore.net/client/api/", ResponseNamespace="http://sitecore.net/client/api/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetWebPageHtml(string url, string datasource, string parameters) {
            object[] results = this.Invoke("GetWebPageHtml", new object[] {
                        url,
                        datasource,
                        parameters});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetWebPageHtmlAsync(string url, string datasource, string parameters) {
            this.GetWebPageHtmlAsync(url, datasource, parameters, null);
        }
        
        /// <remarks/>
        public void GetWebPageHtmlAsync(string url, string datasource, string parameters, object userState) {
            if ((this.GetWebPageHtmlOperationCompleted == null)) {
                this.GetWebPageHtmlOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetWebPageHtmlOperationCompleted);
            }
            this.InvokeAsync("GetWebPageHtml", new object[] {
                        url,
                        datasource,
                        parameters}, this.GetWebPageHtmlOperationCompleted, userState);
        }
        
        private void OnGetWebPageHtmlOperationCompleted(object arg) {
            if ((this.GetWebPageHtmlCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetWebPageHtmlCompleted(this, new GetWebPageHtmlCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://sitecore.net/client/api/InsertItemTreeXml", RequestNamespace="http://sitecore.net/client/api/", ResponseNamespace="http://sitecore.net/client/api/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string InsertItemTreeXml(string sParent, string sXml, bool bChangeIDs) {
            object[] results = this.Invoke("InsertItemTreeXml", new object[] {
                        sParent,
                        sXml,
                        bChangeIDs});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void InsertItemTreeXmlAsync(string sParent, string sXml, bool bChangeIDs) {
            this.InsertItemTreeXmlAsync(sParent, sXml, bChangeIDs, null);
        }
        
        /// <remarks/>
        public void InsertItemTreeXmlAsync(string sParent, string sXml, bool bChangeIDs, object userState) {
            if ((this.InsertItemTreeXmlOperationCompleted == null)) {
                this.InsertItemTreeXmlOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertItemTreeXmlOperationCompleted);
            }
            this.InvokeAsync("InsertItemTreeXml", new object[] {
                        sParent,
                        sXml,
                        bChangeIDs}, this.InsertItemTreeXmlOperationCompleted, userState);
        }
        
        private void OnInsertItemTreeXmlOperationCompleted(object arg) {
            if ((this.InsertItemTreeXmlCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertItemTreeXmlCompleted(this, new InsertItemTreeXmlCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://sitecore.net/client/api/IsLoggedIn", RequestNamespace="http://sitecore.net/client/api/", ResponseNamespace="http://sitecore.net/client/api/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool IsLoggedIn() {
            object[] results = this.Invoke("IsLoggedIn", new object[0]);
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void IsLoggedInAsync() {
            this.IsLoggedInAsync(null);
        }
        
        /// <remarks/>
        public void IsLoggedInAsync(object userState) {
            if ((this.IsLoggedInOperationCompleted == null)) {
                this.IsLoggedInOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIsLoggedInOperationCompleted);
            }
            this.InvokeAsync("IsLoggedIn", new object[0], this.IsLoggedInOperationCompleted, userState);
        }
        
        private void OnIsLoggedInOperationCompleted(object arg) {
            if ((this.IsLoggedInCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IsLoggedInCompleted(this, new IsLoggedInCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://sitecore.net/client/api/IsSessionValid", RequestNamespace="http://sitecore.net/client/api/", ResponseNamespace="http://sitecore.net/client/api/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool IsSessionValid() {
            object[] results = this.Invoke("IsSessionValid", new object[0]);
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void IsSessionValidAsync() {
            this.IsSessionValidAsync(null);
        }
        
        /// <remarks/>
        public void IsSessionValidAsync(object userState) {
            if ((this.IsSessionValidOperationCompleted == null)) {
                this.IsSessionValidOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIsSessionValidOperationCompleted);
            }
            this.InvokeAsync("IsSessionValid", new object[0], this.IsSessionValidOperationCompleted, userState);
        }
        
        private void OnIsSessionValidOperationCompleted(object arg) {
            if ((this.IsSessionValidCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IsSessionValidCompleted(this, new IsSessionValidCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://sitecore.net/client/api/IsPreviewing", RequestNamespace="http://sitecore.net/client/api/", ResponseNamespace="http://sitecore.net/client/api/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool IsPreviewing() {
            object[] results = this.Invoke("IsPreviewing", new object[0]);
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void IsPreviewingAsync() {
            this.IsPreviewingAsync(null);
        }
        
        /// <remarks/>
        public void IsPreviewingAsync(object userState) {
            if ((this.IsPreviewingOperationCompleted == null)) {
                this.IsPreviewingOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIsPreviewingOperationCompleted);
            }
            this.InvokeAsync("IsPreviewing", new object[0], this.IsPreviewingOperationCompleted, userState);
        }
        
        private void OnIsPreviewingOperationCompleted(object arg) {
            if ((this.IsPreviewingCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IsPreviewingCompleted(this, new IsPreviewingCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://sitecore.net/client/api/IsWebEditing", RequestNamespace="http://sitecore.net/client/api/", ResponseNamespace="http://sitecore.net/client/api/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool IsWebEditing() {
            object[] results = this.Invoke("IsWebEditing", new object[0]);
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void IsWebEditingAsync() {
            this.IsWebEditingAsync(null);
        }
        
        /// <remarks/>
        public void IsWebEditingAsync(object userState) {
            if ((this.IsWebEditingOperationCompleted == null)) {
                this.IsWebEditingOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIsWebEditingOperationCompleted);
            }
            this.InvokeAsync("IsWebEditing", new object[0], this.IsWebEditingOperationCompleted, userState);
        }
        
        private void OnIsWebEditingOperationCompleted(object arg) {
            if ((this.IsWebEditingCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IsWebEditingCompleted(this, new IsWebEditingCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://sitecore.net/client/api/LoadLayout", RequestNamespace="http://sitecore.net/client/api/", ResponseNamespace="http://sitecore.net/client/api/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode LoadLayout(string sID) {
            object[] results = this.Invoke("LoadLayout", new object[] {
                        sID});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void LoadLayoutAsync(string sID) {
            this.LoadLayoutAsync(sID, null);
        }
        
        /// <remarks/>
        public void LoadLayoutAsync(string sID, object userState) {
            if ((this.LoadLayoutOperationCompleted == null)) {
                this.LoadLayoutOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadLayoutOperationCompleted);
            }
            this.InvokeAsync("LoadLayout", new object[] {
                        sID}, this.LoadLayoutOperationCompleted, userState);
        }
        
        private void OnLoadLayoutOperationCompleted(object arg) {
            if ((this.LoadLayoutCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadLayoutCompleted(this, new LoadLayoutCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://sitecore.net/client/api/LoadPublishFile", RequestNamespace="http://sitecore.net/client/api/", ResponseNamespace="http://sitecore.net/client/api/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void LoadPublishFile(string filename) {
            this.Invoke("LoadPublishFile", new object[] {
                        filename});
        }
        
        /// <remarks/>
        public void LoadPublishFileAsync(string filename) {
            this.LoadPublishFileAsync(filename, null);
        }
        
        /// <remarks/>
        public void LoadPublishFileAsync(string filename, object userState) {
            if ((this.LoadPublishFileOperationCompleted == null)) {
                this.LoadPublishFileOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadPublishFileOperationCompleted);
            }
            this.InvokeAsync("LoadPublishFile", new object[] {
                        filename}, this.LoadPublishFileOperationCompleted, userState);
        }
        
        private void OnLoadPublishFileOperationCompleted(object arg) {
            if ((this.LoadPublishFileCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadPublishFileCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://sitecore.net/client/api/LoadXslFile", RequestNamespace="http://sitecore.net/client/api/", ResponseNamespace="http://sitecore.net/client/api/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode LoadXslFile(string sID) {
            object[] results = this.Invoke("LoadXslFile", new object[] {
                        sID});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void LoadXslFileAsync(string sID) {
            this.LoadXslFileAsync(sID, null);
        }
        
        /// <remarks/>
        public void LoadXslFileAsync(string sID, object userState) {
            if ((this.LoadXslFileOperationCompleted == null)) {
                this.LoadXslFileOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadXslFileOperationCompleted);
            }
            this.InvokeAsync("LoadXslFile", new object[] {
                        sID}, this.LoadXslFileOperationCompleted, userState);
        }
        
        private void OnLoadXslFileOperationCompleted(object arg) {
            if ((this.LoadXslFileCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadXslFileCompleted(this, new LoadXslFileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://sitecore.net/client/api/Login", RequestNamespace="http://sitecore.net/client/api/", ResponseNamespace="http://sitecore.net/client/api/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void Login(string sUserName, string sPassword) {
            this.Invoke("Login", new object[] {
                        sUserName,
                        sPassword});
        }
        
        /// <remarks/>
        public void LoginAsync(string sUserName, string sPassword) {
            this.LoginAsync(sUserName, sPassword, null);
        }
        
        /// <remarks/>
        public void LoginAsync(string sUserName, string sPassword, object userState) {
            if ((this.LoginOperationCompleted == null)) {
                this.LoginOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoginOperationCompleted);
            }
            this.InvokeAsync("Login", new object[] {
                        sUserName,
                        sPassword}, this.LoginOperationCompleted, userState);
        }
        
        private void OnLoginOperationCompleted(object arg) {
            if ((this.LoginCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoginCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://sitecore.net/client/api/Logout", RequestNamespace="http://sitecore.net/client/api/", ResponseNamespace="http://sitecore.net/client/api/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void Logout() {
            this.Invoke("Logout", new object[0]);
        }
        
        /// <remarks/>
        public void LogoutAsync() {
            this.LogoutAsync(null);
        }
        
        /// <remarks/>
        public void LogoutAsync(object userState) {
            if ((this.LogoutOperationCompleted == null)) {
                this.LogoutOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLogoutOperationCompleted);
            }
            this.InvokeAsync("Logout", new object[0], this.LogoutOperationCompleted, userState);
        }
        
        private void OnLogoutOperationCompleted(object arg) {
            if ((this.LogoutCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LogoutCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://sitecore.net/client/api/MoveItemTo", RequestNamespace="http://sitecore.net/client/api/", ResponseNamespace="http://sitecore.net/client/api/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode MoveItemTo(string sItemID, string sDestinationID) {
            object[] results = this.Invoke("MoveItemTo", new object[] {
                        sItemID,
                        sDestinationID});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void MoveItemToAsync(string sItemID, string sDestinationID) {
            this.MoveItemToAsync(sItemID, sDestinationID, null);
        }
        
        /// <remarks/>
        public void MoveItemToAsync(string sItemID, string sDestinationID, object userState) {
            if ((this.MoveItemToOperationCompleted == null)) {
                this.MoveItemToOperationCompleted = new System.Threading.SendOrPostCallback(this.OnMoveItemToOperationCompleted);
            }
            this.InvokeAsync("MoveItemTo", new object[] {
                        sItemID,
                        sDestinationID}, this.MoveItemToOperationCompleted, userState);
        }
        
        private void OnMoveItemToOperationCompleted(object arg) {
            if ((this.MoveItemToCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.MoveItemToCompleted(this, new MoveItemToCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://sitecore.net/client/api/NewLayout", RequestNamespace="http://sitecore.net/client/api/", ResponseNamespace="http://sitecore.net/client/api/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode NewLayout(string sName) {
            object[] results = this.Invoke("NewLayout", new object[] {
                        sName});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void NewLayoutAsync(string sName) {
            this.NewLayoutAsync(sName, null);
        }
        
        /// <remarks/>
        public void NewLayoutAsync(string sName, object userState) {
            if ((this.NewLayoutOperationCompleted == null)) {
                this.NewLayoutOperationCompleted = new System.Threading.SendOrPostCallback(this.OnNewLayoutOperationCompleted);
            }
            this.InvokeAsync("NewLayout", new object[] {
                        sName}, this.NewLayoutOperationCompleted, userState);
        }
        
        private void OnNewLayoutOperationCompleted(object arg) {
            if ((this.NewLayoutCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.NewLayoutCompleted(this, new NewLayoutCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://sitecore.net/client/api/Ping", RequestNamespace="http://sitecore.net/client/api/", ResponseNamespace="http://sitecore.net/client/api/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Ping() {
            object[] results = this.Invoke("Ping", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void PingAsync() {
            this.PingAsync(null);
        }
        
        /// <remarks/>
        public void PingAsync(object userState) {
            if ((this.PingOperationCompleted == null)) {
                this.PingOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPingOperationCompleted);
            }
            this.InvokeAsync("Ping", new object[0], this.PingOperationCompleted, userState);
        }
        
        private void OnPingOperationCompleted(object arg) {
            if ((this.PingCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PingCompleted(this, new PingCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://sitecore.net/client/api/Publish", RequestNamespace="http://sitecore.net/client/api/", ResponseNamespace="http://sitecore.net/client/api/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Publish(bool publishAll, string rootItemID, string groups) {
            object[] results = this.Invoke("Publish", new object[] {
                        publishAll,
                        rootItemID,
                        groups});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void PublishAsync(bool publishAll, string rootItemID, string groups) {
            this.PublishAsync(publishAll, rootItemID, groups, null);
        }
        
        /// <remarks/>
        public void PublishAsync(bool publishAll, string rootItemID, string groups, object userState) {
            if ((this.PublishOperationCompleted == null)) {
                this.PublishOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPublishOperationCompleted);
            }
            this.InvokeAsync("Publish", new object[] {
                        publishAll,
                        rootItemID,
                        groups}, this.PublishOperationCompleted, userState);
        }
        
        private void OnPublishOperationCompleted(object arg) {
            if ((this.PublishCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PublishCompleted(this, new PublishCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://sitecore.net/client/api/PublishItem", RequestNamespace="http://sitecore.net/client/api/", ResponseNamespace="http://sitecore.net/client/api/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string PublishItem(string itemPath, string groups, bool deep) {
            object[] results = this.Invoke("PublishItem", new object[] {
                        itemPath,
                        groups,
                        deep});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void PublishItemAsync(string itemPath, string groups, bool deep) {
            this.PublishItemAsync(itemPath, groups, deep, null);
        }
        
        /// <remarks/>
        public void PublishItemAsync(string itemPath, string groups, bool deep, object userState) {
            if ((this.PublishItemOperationCompleted == null)) {
                this.PublishItemOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPublishItemOperationCompleted);
            }
            this.InvokeAsync("PublishItem", new object[] {
                        itemPath,
                        groups,
                        deep}, this.PublishItemOperationCompleted, userState);
        }
        
        private void OnPublishItemOperationCompleted(object arg) {
            if ((this.PublishItemCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PublishItemCompleted(this, new PublishItemCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://sitecore.net/client/api/ReloadDatabase", RequestNamespace="http://sitecore.net/client/api/", ResponseNamespace="http://sitecore.net/client/api/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void ReloadDatabase() {
            this.Invoke("ReloadDatabase", new object[0]);
        }
        
        /// <remarks/>
        public void ReloadDatabaseAsync() {
            this.ReloadDatabaseAsync(null);
        }
        
        /// <remarks/>
        public void ReloadDatabaseAsync(object userState) {
            if ((this.ReloadDatabaseOperationCompleted == null)) {
                this.ReloadDatabaseOperationCompleted = new System.Threading.SendOrPostCallback(this.OnReloadDatabaseOperationCompleted);
            }
            this.InvokeAsync("ReloadDatabase", new object[0], this.ReloadDatabaseOperationCompleted, userState);
        }
        
        private void OnReloadDatabaseOperationCompleted(object arg) {
            if ((this.ReloadDatabaseCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ReloadDatabaseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://sitecore.net/client/api/RenameItem", RequestNamespace="http://sitecore.net/client/api/", ResponseNamespace="http://sitecore.net/client/api/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void RenameItem(string itemPath, string name) {
            this.Invoke("RenameItem", new object[] {
                        itemPath,
                        name});
        }
        
        /// <remarks/>
        public void RenameItemAsync(string itemPath, string name) {
            this.RenameItemAsync(itemPath, name, null);
        }
        
        /// <remarks/>
        public void RenameItemAsync(string itemPath, string name, object userState) {
            if ((this.RenameItemOperationCompleted == null)) {
                this.RenameItemOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRenameItemOperationCompleted);
            }
            this.InvokeAsync("RenameItem", new object[] {
                        itemPath,
                        name}, this.RenameItemOperationCompleted, userState);
        }
        
        private void OnRenameItemOperationCompleted(object arg) {
            if ((this.RenameItemCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RenameItemCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://sitecore.net/client/api/SaveDatabase", RequestNamespace="http://sitecore.net/client/api/", ResponseNamespace="http://sitecore.net/client/api/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SaveDatabase() {
            this.Invoke("SaveDatabase", new object[0]);
        }
        
        /// <remarks/>
        public void SaveDatabaseAsync() {
            this.SaveDatabaseAsync(null);
        }
        
        /// <remarks/>
        public void SaveDatabaseAsync(object userState) {
            if ((this.SaveDatabaseOperationCompleted == null)) {
                this.SaveDatabaseOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveDatabaseOperationCompleted);
            }
            this.InvokeAsync("SaveDatabase", new object[0], this.SaveDatabaseOperationCompleted, userState);
        }
        
        private void OnSaveDatabaseOperationCompleted(object arg) {
            if ((this.SaveDatabaseCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveDatabaseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://sitecore.net/client/api/SaveItemChanges", RequestNamespace="http://sitecore.net/client/api/", ResponseNamespace="http://sitecore.net/client/api/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string SaveItemChanges(string sXml) {
            object[] results = this.Invoke("SaveItemChanges", new object[] {
                        sXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SaveItemChangesAsync(string sXml) {
            this.SaveItemChangesAsync(sXml, null);
        }
        
        /// <remarks/>
        public void SaveItemChangesAsync(string sXml, object userState) {
            if ((this.SaveItemChangesOperationCompleted == null)) {
                this.SaveItemChangesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveItemChangesOperationCompleted);
            }
            this.InvokeAsync("SaveItemChanges", new object[] {
                        sXml}, this.SaveItemChangesOperationCompleted, userState);
        }
        
        private void OnSaveItemChangesOperationCompleted(object arg) {
            if ((this.SaveItemChangesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveItemChangesCompleted(this, new SaveItemChangesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://sitecore.net/client/api/SaveItems", RequestNamespace="http://sitecore.net/client/api/", ResponseNamespace="http://sitecore.net/client/api/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SaveItems(string xml) {
            this.Invoke("SaveItems", new object[] {
                        xml});
        }
        
        /// <remarks/>
        public void SaveItemsAsync(string xml) {
            this.SaveItemsAsync(xml, null);
        }
        
        /// <remarks/>
        public void SaveItemsAsync(string xml, object userState) {
            if ((this.SaveItemsOperationCompleted == null)) {
                this.SaveItemsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveItemsOperationCompleted);
            }
            this.InvokeAsync("SaveItems", new object[] {
                        xml}, this.SaveItemsOperationCompleted, userState);
        }
        
        private void OnSaveItemsOperationCompleted(object arg) {
            if ((this.SaveItemsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveItemsCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://sitecore.net/client/api/SaveLayout", RequestNamespace="http://sitecore.net/client/api/", ResponseNamespace="http://sitecore.net/client/api/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string SaveLayout(string sID, string sHtml, string sTimestamp, bool bOverwrite) {
            object[] results = this.Invoke("SaveLayout", new object[] {
                        sID,
                        sHtml,
                        sTimestamp,
                        bOverwrite});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SaveLayoutAsync(string sID, string sHtml, string sTimestamp, bool bOverwrite) {
            this.SaveLayoutAsync(sID, sHtml, sTimestamp, bOverwrite, null);
        }
        
        /// <remarks/>
        public void SaveLayoutAsync(string sID, string sHtml, string sTimestamp, bool bOverwrite, object userState) {
            if ((this.SaveLayoutOperationCompleted == null)) {
                this.SaveLayoutOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveLayoutOperationCompleted);
            }
            this.InvokeAsync("SaveLayout", new object[] {
                        sID,
                        sHtml,
                        sTimestamp,
                        bOverwrite}, this.SaveLayoutOperationCompleted, userState);
        }
        
        private void OnSaveLayoutOperationCompleted(object arg) {
            if ((this.SaveLayoutCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveLayoutCompleted(this, new SaveLayoutCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://sitecore.net/client/api/SavePackage", RequestNamespace="http://sitecore.net/client/api/", ResponseNamespace="http://sitecore.net/client/api/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SavePackage(string sName, string sXml) {
            this.Invoke("SavePackage", new object[] {
                        sName,
                        sXml});
        }
        
        /// <remarks/>
        public void SavePackageAsync(string sName, string sXml) {
            this.SavePackageAsync(sName, sXml, null);
        }
        
        /// <remarks/>
        public void SavePackageAsync(string sName, string sXml, object userState) {
            if ((this.SavePackageOperationCompleted == null)) {
                this.SavePackageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSavePackageOperationCompleted);
            }
            this.InvokeAsync("SavePackage", new object[] {
                        sName,
                        sXml}, this.SavePackageOperationCompleted, userState);
        }
        
        private void OnSavePackageOperationCompleted(object arg) {
            if ((this.SavePackageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SavePackageCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://sitecore.net/client/api/SavePageEditData", RequestNamespace="http://sitecore.net/client/api/", ResponseNamespace="http://sitecore.net/client/api/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string SavePageEditData(string xml) {
            object[] results = this.Invoke("SavePageEditData", new object[] {
                        xml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SavePageEditDataAsync(string xml) {
            this.SavePageEditDataAsync(xml, null);
        }
        
        /// <remarks/>
        public void SavePageEditDataAsync(string xml, object userState) {
            if ((this.SavePageEditDataOperationCompleted == null)) {
                this.SavePageEditDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSavePageEditDataOperationCompleted);
            }
            this.InvokeAsync("SavePageEditData", new object[] {
                        xml}, this.SavePageEditDataOperationCompleted, userState);
        }
        
        private void OnSavePageEditDataOperationCompleted(object arg) {
            if ((this.SavePageEditDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SavePageEditDataCompleted(this, new SavePageEditDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://sitecore.net/client/api/SaveXslFile", RequestNamespace="http://sitecore.net/client/api/", ResponseNamespace="http://sitecore.net/client/api/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string SaveXslFile(string sID, string sHtml, string sTimestamp, bool bOverwrite) {
            object[] results = this.Invoke("SaveXslFile", new object[] {
                        sID,
                        sHtml,
                        sTimestamp,
                        bOverwrite});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SaveXslFileAsync(string sID, string sHtml, string sTimestamp, bool bOverwrite) {
            this.SaveXslFileAsync(sID, sHtml, sTimestamp, bOverwrite, null);
        }
        
        /// <remarks/>
        public void SaveXslFileAsync(string sID, string sHtml, string sTimestamp, bool bOverwrite, object userState) {
            if ((this.SaveXslFileOperationCompleted == null)) {
                this.SaveXslFileOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveXslFileOperationCompleted);
            }
            this.InvokeAsync("SaveXslFile", new object[] {
                        sID,
                        sHtml,
                        sTimestamp,
                        bOverwrite}, this.SaveXslFileOperationCompleted, userState);
        }
        
        private void OnSaveXslFileOperationCompleted(object arg) {
            if ((this.SaveXslFileCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveXslFileCompleted(this, new SaveXslFileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://sitecore.net/client/api/SetClientLanguage", RequestNamespace="http://sitecore.net/client/api/", ResponseNamespace="http://sitecore.net/client/api/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SetClientLanguage(string sLanguage) {
            this.Invoke("SetClientLanguage", new object[] {
                        sLanguage});
        }
        
        /// <remarks/>
        public void SetClientLanguageAsync(string sLanguage) {
            this.SetClientLanguageAsync(sLanguage, null);
        }
        
        /// <remarks/>
        public void SetClientLanguageAsync(string sLanguage, object userState) {
            if ((this.SetClientLanguageOperationCompleted == null)) {
                this.SetClientLanguageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetClientLanguageOperationCompleted);
            }
            this.InvokeAsync("SetClientLanguage", new object[] {
                        sLanguage}, this.SetClientLanguageOperationCompleted, userState);
        }
        
        private void OnSetClientLanguageOperationCompleted(object arg) {
            if ((this.SetClientLanguageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetClientLanguageCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://sitecore.net/client/api/SetLanguage", RequestNamespace="http://sitecore.net/client/api/", ResponseNamespace="http://sitecore.net/client/api/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SetLanguage(string sLanguage) {
            this.Invoke("SetLanguage", new object[] {
                        sLanguage});
        }
        
        /// <remarks/>
        public void SetLanguageAsync(string sLanguage) {
            this.SetLanguageAsync(sLanguage, null);
        }
        
        /// <remarks/>
        public void SetLanguageAsync(string sLanguage, object userState) {
            if ((this.SetLanguageOperationCompleted == null)) {
                this.SetLanguageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetLanguageOperationCompleted);
            }
            this.InvokeAsync("SetLanguage", new object[] {
                        sLanguage}, this.SetLanguageOperationCompleted, userState);
        }
        
        private void OnSetLanguageOperationCompleted(object arg) {
            if ((this.SetLanguageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetLanguageCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://sitecore.net/client/api/StartPreview", RequestNamespace="http://sitecore.net/client/api/", ResponseNamespace="http://sitecore.net/client/api/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void StartPreview(string isoDate, string groups) {
            this.Invoke("StartPreview", new object[] {
                        isoDate,
                        groups});
        }
        
        /// <remarks/>
        public void StartPreviewAsync(string isoDate, string groups) {
            this.StartPreviewAsync(isoDate, groups, null);
        }
        
        /// <remarks/>
        public void StartPreviewAsync(string isoDate, string groups, object userState) {
            if ((this.StartPreviewOperationCompleted == null)) {
                this.StartPreviewOperationCompleted = new System.Threading.SendOrPostCallback(this.OnStartPreviewOperationCompleted);
            }
            this.InvokeAsync("StartPreview", new object[] {
                        isoDate,
                        groups}, this.StartPreviewOperationCompleted, userState);
        }
        
        private void OnStartPreviewOperationCompleted(object arg) {
            if ((this.StartPreviewCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.StartPreviewCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://sitecore.net/client/api/StartWebEdit", RequestNamespace="http://sitecore.net/client/api/", ResponseNamespace="http://sitecore.net/client/api/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void StartWebEdit() {
            this.Invoke("StartWebEdit", new object[0]);
        }
        
        /// <remarks/>
        public void StartWebEditAsync() {
            this.StartWebEditAsync(null);
        }
        
        /// <remarks/>
        public void StartWebEditAsync(object userState) {
            if ((this.StartWebEditOperationCompleted == null)) {
                this.StartWebEditOperationCompleted = new System.Threading.SendOrPostCallback(this.OnStartWebEditOperationCompleted);
            }
            this.InvokeAsync("StartWebEdit", new object[0], this.StartWebEditOperationCompleted, userState);
        }
        
        private void OnStartWebEditOperationCompleted(object arg) {
            if ((this.StartWebEditCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.StartWebEditCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://sitecore.net/client/api/TidyHtml", RequestNamespace="http://sitecore.net/client/api/", ResponseNamespace="http://sitecore.net/client/api/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string TidyHtml(string html, string type) {
            object[] results = this.Invoke("TidyHtml", new object[] {
                        html,
                        type});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void TidyHtmlAsync(string html, string type) {
            this.TidyHtmlAsync(html, type, null);
        }
        
        /// <remarks/>
        public void TidyHtmlAsync(string html, string type, object userState) {
            if ((this.TidyHtmlOperationCompleted == null)) {
                this.TidyHtmlOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTidyHtmlOperationCompleted);
            }
            this.InvokeAsync("TidyHtml", new object[] {
                        html,
                        type}, this.TidyHtmlOperationCompleted, userState);
        }
        
        private void OnTidyHtmlOperationCompleted(object arg) {
            if ((this.TidyHtmlCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.TidyHtmlCompleted(this, new TidyHtmlCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://sitecore.net/client/api/TidyHtmlEx", RequestNamespace="http://sitecore.net/client/api/", ResponseNamespace="http://sitecore.net/client/api/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string TidyHtmlEx(string html, bool clean, bool filter, bool tidy, string allowedTags) {
            object[] results = this.Invoke("TidyHtmlEx", new object[] {
                        html,
                        clean,
                        filter,
                        tidy,
                        allowedTags});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void TidyHtmlExAsync(string html, bool clean, bool filter, bool tidy, string allowedTags) {
            this.TidyHtmlExAsync(html, clean, filter, tidy, allowedTags, null);
        }
        
        /// <remarks/>
        public void TidyHtmlExAsync(string html, bool clean, bool filter, bool tidy, string allowedTags, object userState) {
            if ((this.TidyHtmlExOperationCompleted == null)) {
                this.TidyHtmlExOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTidyHtmlExOperationCompleted);
            }
            this.InvokeAsync("TidyHtmlEx", new object[] {
                        html,
                        clean,
                        filter,
                        tidy,
                        allowedTags}, this.TidyHtmlExOperationCompleted, userState);
        }
        
        private void OnTidyHtmlExOperationCompleted(object arg) {
            if ((this.TidyHtmlExCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.TidyHtmlExCompleted(this, new TidyHtmlExCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://sitecore.net/client/api/UpdateDocument", RequestNamespace="http://sitecore.net/client/api/", ResponseNamespace="http://sitecore.net/client/api/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UpdateDocument(string sPath, string sXml) {
            object[] results = this.Invoke("UpdateDocument", new object[] {
                        sPath,
                        sXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateDocumentAsync(string sPath, string sXml) {
            this.UpdateDocumentAsync(sPath, sXml, null);
        }
        
        /// <remarks/>
        public void UpdateDocumentAsync(string sPath, string sXml, object userState) {
            if ((this.UpdateDocumentOperationCompleted == null)) {
                this.UpdateDocumentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateDocumentOperationCompleted);
            }
            this.InvokeAsync("UpdateDocument", new object[] {
                        sPath,
                        sXml}, this.UpdateDocumentOperationCompleted, userState);
        }
        
        private void OnUpdateDocumentOperationCompleted(object arg) {
            if ((this.UpdateDocumentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateDocumentCompleted(this, new UpdateDocumentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://sitecore.net/client/api/UpdateSortorder", RequestNamespace="http://sitecore.net/client/api/", ResponseNamespace="http://sitecore.net/client/api/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UpdateSortorder(string parentPath, string list) {
            this.Invoke("UpdateSortorder", new object[] {
                        parentPath,
                        list});
        }
        
        /// <remarks/>
        public void UpdateSortorderAsync(string parentPath, string list) {
            this.UpdateSortorderAsync(parentPath, list, null);
        }
        
        /// <remarks/>
        public void UpdateSortorderAsync(string parentPath, string list, object userState) {
            if ((this.UpdateSortorderOperationCompleted == null)) {
                this.UpdateSortorderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateSortorderOperationCompleted);
            }
            this.InvokeAsync("UpdateSortorder", new object[] {
                        parentPath,
                        list}, this.UpdateSortorderOperationCompleted, userState);
        }
        
        private void OnUpdateSortorderOperationCompleted(object arg) {
            if ((this.UpdateSortorderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateSortorderCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://sitecore.net/client/api/GetPackageInfo", RequestNamespace="http://sitecore.net/client/api/", ResponseNamespace="http://sitecore.net/client/api/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode GetPackageInfo(string packageName) {
            object[] results = this.Invoke("GetPackageInfo", new object[] {
                        packageName});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void GetPackageInfoAsync(string packageName) {
            this.GetPackageInfoAsync(packageName, null);
        }
        
        /// <remarks/>
        public void GetPackageInfoAsync(string packageName, object userState) {
            if ((this.GetPackageInfoOperationCompleted == null)) {
                this.GetPackageInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPackageInfoOperationCompleted);
            }
            this.InvokeAsync("GetPackageInfo", new object[] {
                        packageName}, this.GetPackageInfoOperationCompleted, userState);
        }
        
        private void OnGetPackageInfoOperationCompleted(object arg) {
            if ((this.GetPackageInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPackageInfoCompleted(this, new GetPackageInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://sitecore.net/client/api/GetPackageXml", RequestNamespace="http://sitecore.net/client/api/", ResponseNamespace="http://sitecore.net/client/api/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode GetPackageXml(string packageName) {
            object[] results = this.Invoke("GetPackageXml", new object[] {
                        packageName});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void GetPackageXmlAsync(string packageName) {
            this.GetPackageXmlAsync(packageName, null);
        }
        
        /// <remarks/>
        public void GetPackageXmlAsync(string packageName, object userState) {
            if ((this.GetPackageXmlOperationCompleted == null)) {
                this.GetPackageXmlOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPackageXmlOperationCompleted);
            }
            this.InvokeAsync("GetPackageXml", new object[] {
                        packageName}, this.GetPackageXmlOperationCompleted, userState);
        }
        
        private void OnGetPackageXmlOperationCompleted(object arg) {
            if ((this.GetPackageXmlCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPackageXmlCompleted(this, new GetPackageXmlCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://sitecore.net/client/api/ImportPackage", RequestNamespace="http://sitecore.net/client/api/", ResponseNamespace="http://sitecore.net/client/api/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode ImportPackage(string packageName) {
            object[] results = this.Invoke("ImportPackage", new object[] {
                        packageName});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void ImportPackageAsync(string packageName) {
            this.ImportPackageAsync(packageName, null);
        }
        
        /// <remarks/>
        public void ImportPackageAsync(string packageName, object userState) {
            if ((this.ImportPackageOperationCompleted == null)) {
                this.ImportPackageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnImportPackageOperationCompleted);
            }
            this.InvokeAsync("ImportPackage", new object[] {
                        packageName}, this.ImportPackageOperationCompleted, userState);
        }
        
        private void OnImportPackageOperationCompleted(object arg) {
            if ((this.ImportPackageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ImportPackageCompleted(this, new ImportPackageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://sitecore.net/client/api/LoadPackage", RequestNamespace="http://sitecore.net/client/api/", ResponseNamespace="http://sitecore.net/client/api/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode LoadPackage(string sName) {
            object[] results = this.Invoke("LoadPackage", new object[] {
                        sName});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void LoadPackageAsync(string sName) {
            this.LoadPackageAsync(sName, null);
        }
        
        /// <remarks/>
        public void LoadPackageAsync(string sName, object userState) {
            if ((this.LoadPackageOperationCompleted == null)) {
                this.LoadPackageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadPackageOperationCompleted);
            }
            this.InvokeAsync("LoadPackage", new object[] {
                        sName}, this.LoadPackageOperationCompleted, userState);
        }
        
        private void OnLoadPackageOperationCompleted(object arg) {
            if ((this.LoadPackageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadPackageCompleted(this, new LoadPackageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://sitecore.net/client/api/ResortChildren", RequestNamespace="http://sitecore.net/client/api/", ResponseNamespace="http://sitecore.net/client/api/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void ResortChildren(string path) {
            this.Invoke("ResortChildren", new object[] {
                        path});
        }
        
        /// <remarks/>
        public void ResortChildrenAsync(string path) {
            this.ResortChildrenAsync(path, null);
        }
        
        /// <remarks/>
        public void ResortChildrenAsync(string path, object userState) {
            if ((this.ResortChildrenOperationCompleted == null)) {
                this.ResortChildrenOperationCompleted = new System.Threading.SendOrPostCallback(this.OnResortChildrenOperationCompleted);
            }
            this.InvokeAsync("ResortChildren", new object[] {
                        path}, this.ResortChildrenOperationCompleted, userState);
        }
        
        private void OnResortChildrenOperationCompleted(object arg) {
            if ((this.ResortChildrenCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ResortChildrenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void AboutCompletedEventHandler(object sender, AboutCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AboutCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AboutCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void AddItemFromMasterCompletedEventHandler(object sender, AddItemFromMasterCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddItemFromMasterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddItemFromMasterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void AddItemFromMasterExCompletedEventHandler(object sender, AddItemFromMasterExCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddItemFromMasterExCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddItemFromMasterExCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void AddItemFromTemplateCompletedEventHandler(object sender, AddItemFromTemplateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddItemFromTemplateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddItemFromTemplateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void AddItemFromTemplateExCompletedEventHandler(object sender, AddItemFromTemplateExCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddItemFromTemplateExCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddItemFromTemplateExCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void AddItemRevisionCompletedEventHandler(object sender, AddItemRevisionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddItemRevisionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddItemRevisionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void ApplyExtranetSecurityToChildrenCompletedEventHandler(object sender, ApplyExtranetSecurityToChildrenCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ApplyExtranetSecurityToChildrenCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ApplyExtranetSecurityToChildrenCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void ApplySecurityToChildrenCompletedEventHandler(object sender, ApplySecurityToChildrenCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ApplySecurityToChildrenCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ApplySecurityToChildrenCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void ApplySimpleUpdateCompletedEventHandler(object sender, ApplySimpleUpdateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ApplySimpleUpdateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ApplySimpleUpdateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void ApproveItemsCompletedEventHandler(object sender, ApproveItemsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ApproveItemsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ApproveItemsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void BackupDatabaseCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void BuildPackageCompletedEventHandler(object sender, BuildPackageCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class BuildPackageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal BuildPackageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void CanLoginCompletedEventHandler(object sender, CanLoginCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CanLoginCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CanLoginCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void CanPublishIncrementallyCompletedEventHandler(object sender, CanPublishIncrementallyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CanPublishIncrementallyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CanPublishIncrementallyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void CompactDatabaseCompletedEventHandler(object sender, CompactDatabaseCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CompactDatabaseCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CompactDatabaseCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void CopyItemToCompletedEventHandler(object sender, CopyItemToCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CopyItemToCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CopyItemToCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void CreateDocumentCompletedEventHandler(object sender, CreateDocumentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateDocumentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateDocumentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void CreateMasterCompletedEventHandler(object sender, CreateMasterCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateMasterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateMasterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void CreateTemplateCompletedEventHandler(object sender, CreateTemplateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateTemplateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateTemplateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void DeleteChildrenCompletedEventHandler(object sender, DeleteChildrenCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteChildrenCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteChildrenCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void DeleteDocumentCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void DeleteItemCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void DeleteItemVersionCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void DeleteItemVersionsCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void DuplicateCompletedEventHandler(object sender, DuplicateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DuplicateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DuplicateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void EmptyRecycleBinCompletedEventHandler(object sender, EmptyRecycleBinCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EmptyRecycleBinCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EmptyRecycleBinCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void EndPreviewCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void EndWebEditCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void ExpandLinkedDatabasesCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void FindItemCompletedEventHandler(object sender, FindItemCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FindItemCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FindItemCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetClientLanguageCompletedEventHandler(object sender, GetClientLanguageCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetClientLanguageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetClientLanguageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetControlHtmlCompletedEventHandler(object sender, GetControlHtmlCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetControlHtmlCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetControlHtmlCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetDotMenuCompletedEventHandler(object sender, GetDotMenuCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDotMenuCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDotMenuCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetHomeItemCompletedEventHandler(object sender, GetHomeItemCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetHomeItemCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetHomeItemCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetLocalizedStringCompletedEventHandler(object sender, GetLocalizedStringCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetLocalizedStringCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetLocalizedStringCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetMediaInfoCompletedEventHandler(object sender, GetMediaInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMediaInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMediaInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetItemCompletedEventHandler(object sender, GetItemCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetItemCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetItemCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetItemFieldCompletedEventHandler(object sender, GetItemFieldCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetItemFieldCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetItemFieldCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetItemFieldsCompletedEventHandler(object sender, GetItemFieldsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetItemFieldsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetItemFieldsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetItemTreeCompletedEventHandler(object sender, GetItemTreeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetItemTreeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetItemTreeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetItemInfoCompletedEventHandler(object sender, GetItemInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetItemInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetItemInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetItemsInfoCompletedEventHandler(object sender, GetItemsInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetItemsInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetItemsInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetItemMastersCompletedEventHandler(object sender, GetItemMastersCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetItemMastersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetItemMastersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetItemPathCompletedEventHandler(object sender, GetItemPathCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetItemPathCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetItemPathCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetItemSecurityCompletedEventHandler(object sender, GetItemSecurityCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetItemSecurityCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetItemSecurityCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetDefaultItemPathCompletedEventHandler(object sender, GetDefaultItemPathCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDefaultItemPathCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDefaultItemPathCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetItemTreeXmlCompletedEventHandler(object sender, GetItemTreeXmlCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetItemTreeXmlCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetItemTreeXmlCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetItemXmlCompletedEventHandler(object sender, GetItemXmlCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetItemXmlCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetItemXmlCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetMediaItemsCompletedEventHandler(object sender, GetMediaItemsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMediaItemsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMediaItemsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetNewItemXmlCompletedEventHandler(object sender, GetNewItemXmlCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetNewItemXmlCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetNewItemXmlCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetParentIDCompletedEventHandler(object sender, GetParentIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetParentIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetParentIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetParentPathCompletedEventHandler(object sender, GetParentPathCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetParentPathCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetParentPathCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetPublishingStatusCompletedEventHandler(object sender, GetPublishingStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPublishingStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPublishingStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetSiblingPathCompletedEventHandler(object sender, GetSiblingPathCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSiblingPathCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSiblingPathCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetThreadErrorsCompletedEventHandler(object sender, GetThreadErrorsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetThreadErrorsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetThreadErrorsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetMethodHtmlCompletedEventHandler(object sender, GetMethodHtmlCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMethodHtmlCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMethodHtmlCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetXslFileHtmlCompletedEventHandler(object sender, GetXslFileHtmlCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetXslFileHtmlCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetXslFileHtmlCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetWebPageHtmlCompletedEventHandler(object sender, GetWebPageHtmlCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetWebPageHtmlCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetWebPageHtmlCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void InsertItemTreeXmlCompletedEventHandler(object sender, InsertItemTreeXmlCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertItemTreeXmlCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertItemTreeXmlCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void IsLoggedInCompletedEventHandler(object sender, IsLoggedInCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IsLoggedInCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal IsLoggedInCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void IsSessionValidCompletedEventHandler(object sender, IsSessionValidCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IsSessionValidCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal IsSessionValidCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void IsPreviewingCompletedEventHandler(object sender, IsPreviewingCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IsPreviewingCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal IsPreviewingCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void IsWebEditingCompletedEventHandler(object sender, IsWebEditingCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IsWebEditingCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal IsWebEditingCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void LoadLayoutCompletedEventHandler(object sender, LoadLayoutCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadLayoutCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadLayoutCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void LoadPublishFileCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void LoadXslFileCompletedEventHandler(object sender, LoadXslFileCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadXslFileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadXslFileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void LoginCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void LogoutCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void MoveItemToCompletedEventHandler(object sender, MoveItemToCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MoveItemToCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal MoveItemToCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void NewLayoutCompletedEventHandler(object sender, NewLayoutCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class NewLayoutCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal NewLayoutCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void PingCompletedEventHandler(object sender, PingCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PingCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PingCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void PublishCompletedEventHandler(object sender, PublishCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PublishCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PublishCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void PublishItemCompletedEventHandler(object sender, PublishItemCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PublishItemCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PublishItemCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void ReloadDatabaseCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void RenameItemCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void SaveDatabaseCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void SaveItemChangesCompletedEventHandler(object sender, SaveItemChangesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SaveItemChangesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SaveItemChangesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void SaveItemsCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void SaveLayoutCompletedEventHandler(object sender, SaveLayoutCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SaveLayoutCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SaveLayoutCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void SavePackageCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void SavePageEditDataCompletedEventHandler(object sender, SavePageEditDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SavePageEditDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SavePageEditDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void SaveXslFileCompletedEventHandler(object sender, SaveXslFileCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SaveXslFileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SaveXslFileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void SetClientLanguageCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void SetLanguageCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void StartPreviewCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void StartWebEditCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void TidyHtmlCompletedEventHandler(object sender, TidyHtmlCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TidyHtmlCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal TidyHtmlCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void TidyHtmlExCompletedEventHandler(object sender, TidyHtmlExCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TidyHtmlExCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal TidyHtmlExCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void UpdateDocumentCompletedEventHandler(object sender, UpdateDocumentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateDocumentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateDocumentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void UpdateSortorderCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetPackageInfoCompletedEventHandler(object sender, GetPackageInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPackageInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPackageInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetPackageXmlCompletedEventHandler(object sender, GetPackageXmlCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPackageXmlCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPackageXmlCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void ImportPackageCompletedEventHandler(object sender, ImportPackageCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ImportPackageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ImportPackageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void LoadPackageCompletedEventHandler(object sender, LoadPackageCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadPackageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadPackageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void ResortChildrenCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
}

#pragma warning restore 1591